Search.setIndex({"docnames": ["apidocs", "apidocs_circuit", "apidocs_data", "apidocs_drt", "apidocs_exceptions", "apidocs_fitting", "apidocs_kramers_kronig", "apidocs_plot_mpl", "apidocs_typing", "apidocs_zhit", "guide", "guide_circuit", "guide_cli", "guide_data", "guide_drt", "guide_fitting", "guide_installing", "guide_kramers_kronig", "guide_zhit", "index", "substitutions"], "filenames": ["apidocs.rst", "apidocs_circuit.rst", "apidocs_data.rst", "apidocs_drt.rst", "apidocs_exceptions.rst", "apidocs_fitting.rst", "apidocs_kramers_kronig.rst", "apidocs_plot_mpl.rst", "apidocs_typing.rst", "apidocs_zhit.rst", "guide.rst", "guide_circuit.rst", "guide_cli.rst", "guide_data.rst", "guide_drt.rst", "guide_fitting.rst", "guide_installing.rst", "guide_kramers_kronig.rst", "guide_zhit.rst", "index.rst", "substitutions.rst"], "titles": ["API Documentation", "Equivalent circuits", "Data parsing", "Distribution of relaxation times", "Exceptions", "Circuit fitting", "Kramers-Kronig testing", "Plotting - matplotlib", "Typing", "Z-HIT analysis", "Getting started", "Equivalent circuits", "Command-line interface (CLI)", "Data parsing", "Distribution of relaxation times", "Circuit fitting", "Installing", "Kramers-Kronig testing", "Z-HIT analysis", "Welcome to pyimpspec\u2019s documentation!", "&lt;no title&gt;"], "terms": {"mu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "lambda": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "chi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "2": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "2_": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "p": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "omega": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "bhtresult": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "circuitbuild": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "circuit": [0, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20], "connect": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "contain": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "containerdefinit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "drtresult": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "dataset": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "elementdefinit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "element": [0, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20], "fitresult": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "mrqfitresult": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "parameterdefinit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "resistor": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "capacitor": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "seri": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "subcircuitdefinit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "trnnlsresult": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "trrbfresult": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "testresult": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "transmissionlinemodel": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "compleximped": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "complexresidu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "frequenc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "gamma": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "imped": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "indic": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "phase": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "residu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "timeconst": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "to_circuitikz": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "to_draw": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "get_frequ": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "get_phas": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "get_imped": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "dataframe_to_data_set": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "get_default_num_proc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "set_default_num_proc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "parse_cdc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "parse_data": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "perform_exploratory_test": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "perform_test": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "fit_circuit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "plot_circuit": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "simulate_spectrum": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "register_el": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "The": [0, 1, 2, 3, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19], "follow": [0, 11, 14, 16, 18, 19], "two": [0, 6, 9, 11, 13, 14, 15, 17], "line": [0, 1, 7, 10, 11, 15, 19], "should": [0, 1, 2, 3, 6, 7, 9, 11, 14, 15, 16, 17, 19], "provid": [0, 1, 2, 3, 5, 6, 7, 9, 11, 13, 19], "access": [0, 12, 16, 19], "most": [0, 1, 11, 12], "what": [0, 1, 17], "you": [0, 13, 16, 19], "ar": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19], "like": [0, 1, 9, 11, 15], "need": [0, 1, 11], "import": [0, 11, 13, 14, 15, 16, 17, 18, 19], "pyimpspec": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "main": 0, "function": [0, 7, 11, 12, 13, 14, 15, 16, 17], "class": [0, 4, 11, 14], "etc": [0, 1, 7, 15], "from": [0, 1, 2, 3, 6, 7, 9, 11, 12, 13, 14, 15, 17, 18], "mpl": [0, 7, 13], "plot": [0, 2, 3, 5, 6, 9, 12, 15, 17, 18, 19], "base": [0, 2, 5, 6, 7, 9, 11, 14, 17, 18], "matplotlib": [0, 1, 13, 16, 19], "make": [0, 1, 3, 7, 11, 14, 16], "us": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19], "multipl": [0, 1, 2, 3, 5, 7, 9, 12, 13], "process": [0, 2, 3, 5, 6, 9, 11, 13, 19], "where": [0, 1, 2, 3, 11, 12, 15, 17, 18], "possibl": [0, 5, 6, 11, 15], "perform": [0, 3, 5, 6, 9, 11, 12, 17], "task": 0, "parallel": [0, 1, 3, 5, 6, 9, 11, 12, 17], "implement": [0, 1, 3, 5, 6, 9, 11, 14, 17], "thi": [0, 1, 2, 3, 5, 6, 7, 9, 11, 14, 15, 16, 17, 18], "have": [0, 1, 2, 3, 11, 12, 13, 14, 15, 18], "num_proc": [0, 3, 5, 6, 9], "keyword": [0, 1, 2, 3], "argument": [0, 1, 2, 3, 11, 12], "can": [0, 1, 2, 3, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19], "overrid": [0, 1, 11, 12], "maximum": [0, 3, 5, 6, 9, 15], "number": [0, 1, 2, 3, 5, 6, 9, 11, 12, 13, 15, 17], "allow": [0, 11], "necessari": [0, 2, 3, 5, 6, 9, 11, 15, 17], "user": [0, 1, 16, 19], "under": [0, 13, 19], "circumst": [0, 17], "call": [0, 1, 7, 11, 12, 15], "get": [0, 1, 2, 3, 5, 6, 9, 13, 19], "automat": [0, 1, 2, 3, 11, 12, 14, 16], "determin": [0, 1, 2, 6, 18], "valu": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 17], "your": [0, 12, 14, 15], "system": [0, 6, 11, 12, 15], "There": [0, 11, 17], "i": [0, 1, 2, 3, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19], "also": [0, 1, 3, 7, 9, 11, 12, 13, 15, 16, 17, 18, 19], "set": [0, 1, 2, 3, 5, 6, 7, 9, 11, 12, 15], "global": 0, "rather": 0, "than": [0, 2, 3, 5, 6, 9, 16], "when": [0, 1, 2, 3, 5, 6, 7, 9, 11, 12, 13, 14, 16, 18], "variou": [0, 1, 6, 7, 11, 13, 15], "If": [0, 1, 2, 3, 5, 6, 7, 9, 11, 13, 16, 19], "numpi": [0, 1, 5, 6, 11, 16], "link": 0, "against": 0, "multithread": 0, "linear": [0, 1, 3, 6, 14, 15, 17], "algebra": 0, "librari": 0, "openbla": 0, "mkl": 0, "mai": [0, 1, 3, 5, 9, 11, 13, 14, 15, 16, 18], "some": [0, 1, 5, 6, 7, 10, 11, 12, 13, 14, 15, 17, 19], "result": [0, 2, 3, 5, 6, 7, 9, 12, 13, 14, 15, 17, 18], "unusu": 0, "poor": 0, "despit": 0, "heavi": 0, "cpu": 0, "util": 0, "It": [0, 11, 15], "remedi": 0, "issu": [0, 9, 13, 19], "specifi": [0, 2, 12, 16, 17], "lower": [0, 1, 2, 3, 5, 11, 15], "via": [0, 1, 16, 19], "limit": [0, 1, 3, 4, 5, 6, 7, 11, 15, 17], "thread": [0, 3, 5, 6, 9], "e": [0, 1, 2, 3, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19], "g": [0, 1, 2, 3, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 18, 19], "appropri": [0, 17], "environ": [0, 16], "variabl": [0, 1, 11, 15, 17], "openblas_num_thread": 0, "again": [0, 13], "report": 0, "an": [0, 1, 2, 3, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19], "repositori": 0, "github": [0, 11, 13, 19], "would": [0, 1, 3, 9, 15, 17, 19], "prefer": [0, 19], "default": [0, 1, 7, 9, 11, 12, 15], "try": [0, 3], "which": [0, 1, 2, 3, 6, 9, 11, 14, 15, 16, 17], "lead": [0, 14], "respons": [0, 5, 6, 7, 9, 14, 15], "combin": [0, 6, 15], "": [0, 1, 2, 3, 5, 6, 7, 11, 12, 15, 16], "attempt": [0, 2, 3, 5, 6, 9, 17], "return": [0, 1, 2, 3, 5, 6, 7, 9, 11, 13, 15, 17], "reason": [0, 1], "depend": [0, 1, 16], "detect": [0, 2, 3, 5, 6, 9, 18], "relev": [0, 11], "mkl_num_thread": 0, "none": [0, 1, 2, 3, 4, 6, 7, 9, 13, 17], "list": [0, 1, 2, 3, 4, 6, 7, 13, 14, 17], "abov": [0, 7, 11, 13, 14, 15, 17], "becaus": 0, "other": [0, 6, 16], "multiprocess": 0, "cpu_count": 0, "type": [0, 1, 2, 3, 5, 6, 7, 9, 11, 12, 13, 17, 19], "int": [0, 1, 2, 3, 5, 6, 7, 9, 13], "less": [0, 3, 5, 6, 9, 18], "one": [0, 1, 2, 3, 5, 6, 9, 11, 12, 13, 14, 16, 17], "disabl": [0, 7], "ani": [0, 1, 2, 7, 8, 9, 11], "previou": [0, 11, 16], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 14, 15], "greater": [0, 3, 6, 11], "zero": [0, 2, 3, 6, 11, 17], "otherwis": [0, 1, 5, 6], "data": [0, 3, 5, 6, 7, 9, 10, 11, 12, 14, 15, 17, 18, 19], "pars": [0, 10, 11, 12, 19], "kramer": [0, 1, 7, 10, 12, 14, 15, 19], "kronig": [0, 1, 7, 10, 12, 14, 15, 19], "test": [0, 1, 5, 7, 9, 10, 12, 13, 14, 15, 19], "z": [0, 1, 2, 7, 10, 11, 13, 17, 19], "hit": [0, 10, 19], "analysi": [0, 10, 13, 19], "distribut": [0, 7, 10, 17, 19], "relax": [0, 1, 7, 10, 19], "time": [0, 1, 7, 10, 11, 17, 19], "equival": [0, 5, 6, 10, 14, 15, 17, 19], "fit": [0, 1, 6, 7, 9, 10, 11, 14, 17, 18, 19], "except": [0, 19], "A": [1, 2, 3, 5, 6, 7, 9, 11, 12, 13, 14, 15, 17, 18, 19], "collect": [1, 2, 3, 5, 6, 7, 9], "creat": [1, 2, 7, 12, 13], "defin": [1, 7], "get_el": 1, "dictionari": [1, 2, 5, 13], "map": [1, 2], "symbol": [1, 5, 11], "correspond": [1, 2, 3, 5, 6, 11, 15], "dict": [1, 2, 3, 5, 7, 13], "str": [1, 2, 3, 4, 5, 6, 7, 9, 11, 13, 15], "cdc": [1, 3], "gener": [1, 2, 3, 7, 11, 12, 17], "instanc": [1, 2, 7, 11], "string": [1, 11, 15], "descript": [1, 7], "code": [1, 7, 13, 14, 15, 17, 18, 19], "definit": [1, 11], "kwarg": [1, 2, 3, 7], "regist": [1, 11], "so": [1, 12, 15], "support": [1, 2, 3, 5, 6, 9, 11, 12, 13], "name": [1, 2, 5, 9, 11], "must": [1, 2, 11, 16], "inherit": 1, "method": [1, 5, 6, 11, 13, 14, 15, 16, 17], "_imped": [1, 11], "take": [1, 2, 3, 6, 9, 13], "float": [1, 2, 3, 4, 5, 6, 7, 9, 11, 17], "excit": [1, 11, 14, 15], "hertz": [1, 2, 3, 7], "complex": [1, 2, 3, 6, 7, 9, 17], "label": [1, 2, 3, 5, 6, 7, 9, 11, 15], "simul": [1, 7], "spectrum": [1, 2, 3, 6, 9, 14, 15, 17, 18], "certain": [1, 13], "rang": [1, 3, 5, 6, 9, 18], "calcul": [1, 3, 5, 6, 7, 11, 14, 16], "option": [1, 2, 3, 5, 6, 7, 9, 12, 16], "10": [1, 3, 6, 9, 13, 14, 15, 16, 17, 18], "mhz": 1, "100": [1, 3, 7, 11, 13], "khz": 1, "point": [1, 2, 3, 5, 6, 7, 9, 15], "per": [1, 3, 5, 6], "decad": [1, 3, 5, 6], "append": 1, "element_or_connect": 1, "union": [1, 7], "clear": [1, 13], "remov": 1, "all": [1, 2, 3, 5, 6, 9, 11, 13, 14, 17], "top_level": 1, "fals": [1, 2, 3, 5, 6, 7, 11, 13, 15, 17], "check": [1, 2, 5, 6, 9, 12, 13, 19], "specif": [1, 6, 11, 12], "bool": [1, 2, 3, 5, 6, 7, 13], "whether": [1, 2, 5, 7, 16], "onli": [1, 2, 3, 5, 6, 9, 16], "current": [1, 5, 12, 13], "instead": [1, 2, 7, 12, 16], "nest": 1, "count": [1, 5, 11, 15], "extend": 1, "elements_or_connect": 1, "generate_element_identifi": 1, "run": [1, 5, 11, 12, 15], "integ": [1, 2, 6], "identifi": [1, 2, 4, 7], "true": [1, 2, 3, 7, 11, 13, 15], "simpli": [1, 11, 13], "0": [1, 3, 5, 6, 7, 9, 11, 12, 13, 15, 17], "n": [1, 9, 18], "primarili": [1, 11, 12], "intend": [1, 12, 16], "within": [1, 5, 6, 11], "repres": [1, 2, 3, 5, 6, 9, 11, 13, 15, 17], "particular": 1, "second": [1, 3, 11, 17], "three": [1, 6, 11, 17], "its": [1, 3, 9, 11, 14, 15, 16], "anyth": [1, 3], "see": [1, 3, 5, 6, 9, 11, 12, 14, 16, 17], "diagram": [1, 11, 17], "tabl": [1, 3, 11], "get_connect": 1, "flatten": 1, "more": [1, 2, 3, 6, 7, 9, 11, 12, 13, 14], "get_element_nam": 1, "consider": 1, "assign": [1, 2, 11], "context": [1, 11], "whose": 1, "index": [1, 13, 15], "start": [1, 2, 11, 18, 19], "end": 1, "1": [1, 2, 3, 5, 6, 7, 9, 11, 12, 13, 15, 17, 18], "insert": 1, "posit": [1, 5, 6], "pop": 1, "node_width": 1, "3": [1, 3, 7, 9, 11, 13, 16, 18], "node_height": 1, "5": [1, 3, 9, 11, 13, 15], "left_terminal_label": 1, "right_terminal_label": 1, "hide_label": 1, "custom_label": 1, "latex": [1, 15], "sourc": [1, 7, 11, 13, 14, 15, 17, 18, 19], "draw": [1, 7, 11, 15], "circuitikz": [1, 11, 15], "packag": [1, 6, 16, 19], "width": [1, 3, 9], "each": [1, 2, 3, 5, 6, 7, 15, 17], "node": 1, "height": [1, 3], "termin": [1, 12, 16, 19], "work": [1, 6, 12, 14, 16], "sens": 1, "electrod": 1, "counter": 1, "refer": [1, 3, 6, 9, 11, 14, 17, 18], "hide": 1, "custom": [1, 3, 6, 9], "math": 1, "mode": [1, 3], "schemdraw": [1, 11, 15, 16], "object": [1, 2, 3, 5, 6, 7, 9, 11, 13, 15, 17], "backend": [1, 7, 13], "to_latex": [1, 15], "equat": [1, 11], "compat": [1, 11, 15], "abstract": [1, 3, 14], "to_str": [1, 11], "decim": [1, 11], "numer": [1, 11], "to_sympi": [1, 11, 15], "substitut": 1, "sympi": [1, 11, 15, 16], "expr": 1, "subclass": [1, 3, 11], "add": [1, 2, 6, 7, 11, 12], "subcircuit": [1, 11], "classmethod": [1, 2], "get_default_subcircuit": 1, "kei": [1, 2, 4, 5, 7], "arg": 1, "get_subcircuit": 1, "match": [1, 18], "given": [1, 3, 9, 11], "get_subcircuit_descript": 1, "get_unit": [1, 5], "unit": [1, 5, 11, 15], "set_subcircuit": 1, "pair": 1, "x": [1, 11], "y": [1, 7, 11, 15], "set_valu": [1, 11], "r": [1, 3, 9, 11, 15, 17, 18], "represent": [1, 3, 11], "format": [1, 12, 13], "being": [1, 2, 5, 6, 7, 15], "includ": [1, 2, 3, 6, 7, 11, 12, 13, 14, 15, 17, 19], "output": [1, 11, 12], "express": [1, 11, 15], "note": [1, 2, 5, 11, 13], "underscor": 1, "docstr": [1, 11], "are_fix": 1, "those": [1, 2, 3, 16], "fix": [1, 5, 11, 15, 17], "are_fixed_by_default": 1, "get_default_lower_limit": 1, "get_default_upper_limit": 1, "upper": [1, 3, 11, 15], "get_default_valu": 1, "get_descript": 1, "brief": 1, "get_extended_descript": 1, "get_label": [1, 2, 3, 5, 6, 9, 11], "get_lower_limit": 1, "get_nam": 1, "displai": 1, "consist": [1, 3], "get_symbol": 1, "get_upper_limit": 1, "get_valu": [1, 5], "get_value_descript": 1, "is_fix": [1, 5], "ha": [1, 2, 5, 7, 9, 11, 15, 17, 18], "is_fixed_by_default": 1, "reset_paramet": 1, "reset": 1, "state": [1, 3, 9, 14], "One": [1, 2, 17], "set_fix": [1, 11], "boolean": [1, 2], "set_label": [1, 2, 11], "new": [1, 2, 9, 11, 18], "set_lower_limit": [1, 11], "1e": [1, 11, 14], "9": [1, 13, 16], "set_upper_limit": [1, 11], "wrap": 1, "mean": [1, 2, 3, 9, 13, 17], "basic": [1, 11], "syntax": 1, "omit": [1, 2], "build": 1, "manag": [1, 11, 16], "to_circuit": [1, 11], "c": [1, 3, 9, 11, 14, 15, 17, 18], "ideal": [1, 18], "frac": [1, 17, 18], "j": [1, 3, 6, 14, 17], "pi": [1, 11, 15, 17, 18], "f": [1, 2, 3, 7, 9, 11, 13, 14, 15, 17, 18], "06": 1, "capacit": [1, 6, 11, 12, 15], "constantphaseel": 1, "constant": [1, 3, 17, 18], "q": 1, "model": [1, 3, 6, 11, 15], "non": [1, 3, 6, 9, 13, 14, 15, 17], "left": [1, 11], "right": 1, "admitt": [1, 11], "95": [1, 13], "angl": [1, 2, 3, 5, 6, 9], "radian": [1, 2], "deleviefinitelength": 1, "de": 1, "levi": 1, "l": [1, 3], "porou": 1, "sqrt": [1, 11, 15], "r_": 1, "coth": 1, "d": [1, 6, 17, 18], "r_i": 1, "ohm": [1, 2, 3, 13, 15], "cm": 1, "ionic": [1, 3, 14], "resist": [1, 3, 6, 11, 15, 17], "r_r": 1, "farada": 1, "reaction": 1, "01": [1, 6, 11, 17], "8": [1, 13], "thick": 1, "gerisch": 1, "associ": 1, "electroact": 1, "speci": 1, "electrolyt": 1, "solut": [1, 11, 15], "k": 1, "rate": 1, "havriliaknegami": 1, "havriliak": 1, "negami": 1, "h": [1, 3, 9, 12, 14, 18], "cole": 1, "davidson": 1, "b": [1, 3, 6, 9, 14, 17, 18], "deby": 1, "tau": [1, 7, 17], "dc": 1, "differ": [1, 11, 13, 14, 15], "asymmetri": 1, "expon": [1, 11], "broad": [1, 14], "havriliaknegamialtern": 1, "alt": 1, "altern": [1, 11, 12, 16, 17], "form": [1, 11, 12, 15], "7": [1, 12, 13, 15], "inductor": [1, 17], "induct": [1, 3, 6, 15, 18], "kramerskronigrc": 1, "rc": [1, 3, 6, 12, 15, 17], "modifiedinductor": 1, "modifi": [1, 6], "la": 1, "03": [1, 3, 11, 14], "transmiss": 1, "tlm": 1, "vari": 1, "pore": 1, "length": 1, "how": [1, 7, 11, 12, 13, 17], "affect": [1, 3, 9, 12, 18], "aforement": 1, "configur": 1, "been": [1, 2, 7, 12, 14, 15, 18], "chosen": [1, 3, 6, 15, 17], "doi": [1, 3, 6, 9, 14, 17, 18], "1039": [1, 9, 18], "b001708f": 1, "inform": [1, 3, 5, 6, 9, 11, 12, 13, 15], "about": [1, 3, 5, 9, 12, 13, 17], "m": [1, 6, 9, 12, 14, 16, 17, 19], "x_1": 1, "liquid": 1, "conduct": 1, "x_2": 1, "solid": [1, 3, 14], "electron": 1, "film": 1, "z_a": 1, "outer": [1, 5], "boundari": 1, "interfac": [1, 10, 19], "outsid": 1, "z_b": 1, "inner": [1, 5], "substrat": 1, "zeta": 1, "interfaci": 1, "wall": 1, "transmissionlinemodelblockingcp": 1, "block": 1, "cpe": 1, "tlmbq": 1, "reflect": [1, 11], "cdot": 1, "y_": 1, "n_": 1, "005": 1, "y_b": 1, "n_b": 1, "transmissionlinemodelblockingopen": 1, "open": [1, 11, 13, 16, 19], "tlmbo": 1, "perfectli": 1, "transmissionlinemodelblockingshort": 1, "short": [1, 11], "tlmb": 1, "absorb": 1, "transmissionlinemodelnonblockingcp": 1, "tlmnq": 1, "ct": [1, 11], "r_ct": [1, 11], "charg": [1, 11], "transfer": [1, 11], "r_b": 1, "transmissionlinemodelnonblockingopen": 1, "tlmno": 1, "known": [1, 15], "bisquert": 1, "correct": 1, "1021": 1, "jp993148h": 1, "transmissionlinemodelnonblockingshort": 1, "tlmn": 1, "tanh": 1, "warburg": [1, 11], "semi": 1, "infinit": 1, "w": [1, 9, 11, 18], "diffus": [1, 11], "sigma": 1, "coeffici": [1, 3], "001": 1, "warburgopen": 1, "finit": 1, "wo": 1, "delta": 1, "layer": [1, 11, 15], "re": [1, 2, 7, 11, 13], "approach": [1, 3, 14, 17], "im": [1, 2, 7, 13], "exhibit": 1, "behavior": [1, 14, 15], "hz": [1, 9, 13, 18], "warburgshort": 1, "respect": [1, 6, 11, 15, 17, 18], "placehold": [1, 12], "case": [1, 2, 6, 11, 14, 15, 17], "intent": 1, "text": [1, 11, 13], "below": [1, 3, 7, 9, 11, 12, 13, 14, 15, 17, 18], "ad": [1, 11, 13, 16, 17], "anoth": [1, 2, 16], "exclud": [1, 13], "too": [1, 15], "larg": 1, "properli": 1, "assum": [1, 2, 11], "implicit": 1, "hand": [1, 11], "side": [1, 11], "sympifi": [1, 11], "For": [1, 3, 9, 11, 16], "exampl": [1, 3, 9, 11, 12, 13, 14, 15, 16, 17, 18], "valid": [1, 3, 5, 6, 7, 9, 11, 14, 15, 17, 18], "show": [1, 13, 15], "up": [1, 6], "verifi": 1, "same": [1, 2, 11, 14, 15], "answer": 1, "lower_limit": [1, 11], "upper_limit": [1, 11], "obtain": [1, 11], "requir": [1, 3, 5, 6, 14, 17], "empti": [1, 2, 6], "dure": [1, 3, 5], "inf": [1, 6, 11], "chang": [1, 7, 11], "belong": 1, "experiment": [2, 9, 11, 12, 18, 19], "analyz": [2, 11, 13, 14, 15, 18, 19], "visual": [2, 7, 19], "df": [2, 13, 15], "path": [2, 12, 13], "degre": [2, 3, 5, 6, 9, 15], "panda": [2, 3, 5, 6, 9, 13, 15, 16], "datafram": [2, 3, 5, 6, 9, 13, 15], "sweep": 2, "split": [2, 12], "convert": [2, 12], "column": [2, 3], "either": [2, 11, 13, 15, 16, 17], "real": [2, 3, 5, 6, 7, 9, 17], "imaginari": [2, 3, 5, 6, 7, 9, 17], "magnitud": [2, 3, 5, 6, 7, 9, 17], "header": [2, 3], "thei": [2, 6, 7, 11, 16], "comparison": 2, "insensit": 2, "invert": 2, "sign": 2, "hyphen": 2, "minu": 2, "freq": 2, "part": [2, 3, 5, 6, 7, 9, 17], "z_re": 2, "zre": 2, "z_im": 2, "zim": 2, "imag": 2, "modulu": [2, 5, 9, 18], "mag": 2, "mod": [2, 7, 13], "phz": 2, "phi": 2, "file": [2, 12, 13], "wa": [2, 3, 5, 7, 9, 11, 13, 14, 15], "get_pars": 2, "extens": 2, "parser": 2, "callabl": 2, "file_format": 2, "sheet": 2, "spreadsheet": [2, 13], "xlsx": [2, 13], "od": [2, 13], "successfulli": 2, "made": [2, 3, 11], "pass": [2, 3, 11, 13], "parse_csv": 2, "charact": [2, 11, 12, 13], "separ": [2, 12, 13, 14, 16], "forward": 2, "read_csv": 2, "parse_dfr": 2, "eco": [2, 13], "chemi": [2, 13], "dfr": [2, 13], "parse_dta": 2, "gamri": [2, 13], "dta": [2, 13], "parse_i2b": 2, "elchemea": 2, "analyt": 2, "i2b": 2, "parse_id": 2, "ivium": [2, 13], "id": [2, 13], "idf": [2, 13], "spectra": [2, 12, 13, 14, 15, 17, 18, 19], "parse_mpt": 2, "biolog": [2, 13], "ec": 2, "lab": 2, "mpt": [2, 13], "parse_p00": 2, "p00": 2, "parse_spreadsheet": 2, "read_excel": 2, "mask": 2, "uuid": 2, "analys": [2, 14], "dimension": 2, "arrai": [2, 9, 11], "univers": 2, "uniqu": 2, "averag": 2, "data_set": 2, "duplic": 2, "exist": 2, "copi": [2, 19], "from_dict": [2, 13], "least": [2, 3, 6, 14, 16, 17], "get_bode_data": [2, 3, 5, 6, 9], "bode": [2, 3, 5, 6, 7, 9, 12, 13], "absolut": [2, 3, 5, 6, 7, 9], "neg": [2, 3, 5, 6, 7, 9, 14, 17], "shift": [2, 3, 5, 6, 7, 9], "tupl": [2, 3, 5, 6, 7, 9], "get_magnitud": 2, "get_mask": [2, 13], "get_num_point": [2, 13], "get_nyquist_data": [2, 3, 5, 6, 9], "nyquist": [2, 3, 5, 6, 7, 9, 13, 15, 17], "get_path": 2, "high_pass": [2, 13], "cutoff": 2, "appli": [2, 6, 7, 9, 12, 13, 14], "high": [2, 3, 7, 13, 17, 18], "filter": [2, 13], "low_pass": [2, 13], "low": [2, 3, 9, 13, 15, 17, 18], "higher": 2, "set_mask": [2, 13], "set_path": 2, "subtract_imped": 2, "subtract": 2, "to_datafram": [2, 13], "negative_imaginari": 2, "negative_phas": 2, "doe": [2, 15], "front": 2, "to_dict": 2, "serial": [2, 11], "json": [2, 13], "recreat": 2, "time_const": 3, "pseudo_chisqr": [3, 5, 6, 9], "get_residuals_data": [3, 5, 6, 9], "rel": [3, 5, 6, 7, 9, 17], "percent": [3, 5, 6, 9], "get_time_const": 3, "to_peaks_datafram": 3, "threshold": [3, 7], "peak": [3, 7, 14], "markdown": [3, 15], "minimum": 3, "tallest": 3, "to_statistics_datafram": [3, 5, 6, 9, 15], "statist": [3, 5, 6, 9, 15], "relat": [3, 5, 6, 9, 15], "drt": [3, 7, 14, 16], "calculate_drt": [3, 14], "detail": [3, 6], "mrq": 3, "addit": [3, 6, 11, 13, 16, 17], "document": [3, 5, 6, 7, 13, 16], "calculate_drt_bht": [3, 14], "rbf_type": 3, "gaussian": 3, "derivative_ord": 3, "rbf_shape": 3, "fwhm": 3, "shape_coeff": 3, "num_sampl": 3, "2000": [3, 9, 18], "num_attempt": 3, "maximum_symmetri": 3, "bayesian": [3, 7, 14, 15], "hilbert": [3, 14], "transform": [3, 14, 17], "liu": [3, 14], "wan": [3, 14], "t": [3, 12, 14], "ciucci": [3, 14], "2020": [3, 14], "electrochim": [3, 6, 14, 17], "acta": [3, 6, 9, 14, 17, 18], "357": [3, 11, 14], "136864": [3, 14], "http": [3, 6, 9, 14, 17, 18], "org": [3, 6, 9, 14, 17, 18], "1016": [3, 6, 14, 17], "electacta": [3, 6, 14, 17], "discret": [3, 14], "c0": 3, "matern": 3, "c2": 3, "c4": 3, "c6": 3, "invers": 3, "quadrat": 3, "quadric": 3, "cauchi": 3, "piecewis": [3, 9, 14], "order": [3, 9], "deriv": 3, "shape": 3, "control": [3, 14, 15], "radial": [3, 14], "basi": [3, 14], "full": 3, "half": 3, "factor": [3, 6], "directli": [3, 17], "credible_interv": 3, "credibl": [3, 7], "interv": [3, 7], "accord": [3, 6, 18], "sampl": 3, "drawn": 3, "jensen": 3, "shannon": 3, "distanc": [3, 17], "better": [3, 9], "accuraci": 3, "find": 3, "suitabl": [3, 5, 6, 9, 14, 17], "random": [3, 14], "initi": [3, 11, 14, 15], "expens": 3, "between": [3, 9], "vertic": 3, "symmetri": 3, "common": [3, 15], "oscil": 3, "wildli": 3, "improv": 3, "caus": [3, 15], "longer": 3, "finish": 3, "figur": [3, 5, 6, 7, 9, 13, 14, 15, 17], "out": [3, 5, 6, 9, 19], "core": [3, 5, 6, 9], "addition": [3, 5, 6, 9], "reduc": [3, 5, 6, 9, 15], "much": [3, 5, 6, 9], "leav": [3, 5, 6, 9], "gui": [3, 5, 6, 9, 19], "real_gamma": 3, "imaginary_gamma": 3, "score": [3, 6, 7, 17], "transfrom": 3, "produc": [3, 5, 6, 9, 14, 17], "pseudo": [3, 5, 6, 9, 15], "squar": [3, 5, 6, 9, 11, 14, 15, 17], "eq": [3, 5, 6, 9], "14": [3, 5, 6, 9, 13], "boukamp": [3, 5, 6, 7, 9, 11, 12, 13, 14, 17], "1995": [3, 5, 6, 7, 9, 12, 13, 17], "get_drt_data": 3, "get_gamma": 3, "get_peak": 3, "highest": [3, 7, 13, 17], "get_scor": 3, "to_scores_datafram": 3, "row": 3, "calculate_drt_mrq_fit": [3, 14], "gaussian_width": 3, "15": [3, 5, 6, 9, 13], "num_per_decad": [3, 5, 6, 7], "max_nfev": [3, 5, 6], "2015": [3, 14], "154": [3, 14], "35": [3, 13, 14], "46": [3, 13, 14], "2014": [3, 5, 6, 9, 14, 17], "12": [3, 11, 13, 14, 15, 16], "059": [3, 14], "roll": [3, 14], "2017": [3, 14], "302": [3, 13, 14], "18": [3, 14], "ssi": [3, 14], "2016": [3, 14], "009": [3, 13, 14], "curv": 3, "approxim": [3, 18], "evalu": [3, 5, 6, 15], "multi": [3, 14], "calculate_drt_tr_nnl": [3, 14], "lambda_valu": [3, 14], "tikhonov": [3, 14], "regular": [3, 14], "kulikovski": [3, 14], "2021": [3, 14], "electrochem": [3, 6, 9, 14, 17, 18], "soc": [3, 6, 14, 17], "168": [3, 14], "044512": [3, 14], "1149": [3, 6, 14, 17], "1945": [3, 14], "7111": [3, 14], "abf508": [3, 14], "equal": [3, 5, 6, 9], "corner": 3, "search": 3, "algorithm": [3, 6, 9, 17, 18], "1088": 3, "2633": 3, "1357": 3, "abad0d": 3, "calculate_drt_tr_rbf": [3, 14], "10000": [3, 13], "timeout": 3, "60": [3, 13], "saccoccio": [3, 14], "chen": [3, 14], "184": [3, 14], "483": [3, 14], "499": [3, 14, 15], "09": [3, 14], "097": [3, 14], "167": [3, 14], "439": [3, 14], "454": [3, 14], "123": [3, 14], "effat": [3, 14], "247": [3, 14], "1117": [3, 14], "1129": [3, 14], "07": [3, 13, 14, 15], "050": [3, 14], "due": [3, 7, 11], "small": [3, 7, 17], "wait": 3, "complet": 3, "mean_gamma": 3, "lower_bound": 3, "upper_bound": 3, "bound": [3, 6, 7], "ultim": [3, 11], "get_drt_credible_intervals_data": 3, "connectionwithoutel": 4, "drterror": 4, "duplicateparameterdefinit": 4, "remaining_kei": 4, "expectednumericvalu": 4, "token": 4, "expectedparameteridentifi": 4, "fittingerror": 4, "impedanceerror": 4, "infiniteimped": 4, "infinitelimit": 4, "insufficientelementsinparallelconnect": 4, "insufficienttoken": 4, "invalidelementsymbol": 4, "invalidequ": 4, "invalidnumericvalu": 4, "messag": 4, "invalidparameterdefinit": 4, "valid_kei": 4, "invalidparameterkei": 4, "invalidparameterlowerlimit": 4, "invalidparameterupperlimit": 4, "kramerskronigerror": 4, "notanumberimped": 4, "parsingerror": 4, "msg": 4, "tokenizingerror": 4, "toomanyparameterdefinit": 4, "unexpectedcharact": 4, "unexpectedidentifi": 4, "expected_valu": 4, "unexpectedtoken": 4, "unsupportedfileformat": 4, "zhiterror": 4, "auto": [5, 9], "weight": [5, 9, 15, 17], "iter": [5, 9, 15], "lmfit": [5, 6, 15, 16], "jacobian": [5, 6], "best": [5, 6, 15], "proport": [5, 15], "uniti": 5, "minimizer_result": 5, "fittedparamet": 5, "estim": [5, 15], "standard": 5, "error": [5, 15, 16], "minimizerresult": [5, 15], "minim": [5, 6, 9], "sch\u00f6nleber": [5, 6, 9, 17], "et": [5, 6, 9, 14, 17, 18], "al": [5, 6, 9, 14, 17, 18], "16": [5, 6, 9, 11, 13], "origin": [5, 6, 14], "get_paramet": 5, "to_parameters_datafram": [5, 15], "param": 5, "stderr": 5, "nan": [5, 6], "could": [5, 6, 11, 13], "had": 5, "get_error": 5, "get_relative_error": 5, "num_rc": 6, "mu_criterion": [6, 7, 17], "85": [6, 13, 17], "add_capacit": 6, "add_induct": 6, "leastsq": 6, "batch": 6, "sort": [6, 13, 17], "worst": 6, "befor": [6, 11, 13, 19], "describ": [6, 9, 11, 14, 16, 17], "howev": [6, 7, 11, 14], "select": [6, 14, 17], "account": [6, 9, 13], "just": [6, 12, 13], "criterion": [6, 7, 12, 15, 17], "abil": 6, "intermedi": [6, 11], "versu": 6, "help": [6, 11, 16, 17], "avoid": [6, 11, 17], "occur": 6, "142": [6, 17], "1885": [6, 17], "1894": [6, 17], "2044210": [6, 17], "klotz": [6, 17], "iver": [6, 17], "tiff\u00e9": [6, 17], "131": [6, 17], "20": [6, 11, 13, 17], "27": [6, 13, 17], "034": [6, 17], "total": [6, 11], "procedur": 6, "underfit": [6, 17], "overfit": 6, "cnl": 6, "slower": 6, "rest": 6, "do": [6, 13, 17], "final": 6, "21": [6, 13], "calculate_scor": 6, "get_series_capacit": 6, "get_series_induct": 6, "get_series_resist": 6, "These": [7, 12, 16, 17], "level": 7, "api": [7, 11, 13, 19], "color": 7, "marker": 7, "titl": 7, "legend": 7, "ax": [7, 13], "adjust_ax": 7, "colored_ax": 7, "both": 7, "adjust": [7, 9, 15], "scale": [7, 9], "peak_threshold": 7, "mark": 7, "data_r": 7, "data_imaginari": 7, "data_imped": 7, "data_magnitud": 7, "data_phas": 7, "mani": [7, 13], "smooth": [7, 9, 18], "angular": 7, "look": [7, 15], "exploratori": 7, "xp": 7, "subplot": 7, "plot_bht_scor": 7, "label_bar": 7, "bar": 7, "chart": 7, "plot_bod": 7, "v": [7, 11], "plot_complex": 7, "plot_gamma": 7, "bounds_alpha": 7, "alpha": 7, "plot_imaginari": 7, "plot_magnitud": 7, "plot_mu_xp": 7, "plot_nyquist": [7, 13], "plot_phas": 7, "plot_real": 7, "plot_residu": 7, "tc": [7, 13], "articl": 7, "bernard": [7, 11], "first": [7, 16, 17], "done": [7, 9, 15], "size": 7, "individu": [7, 13], "enabl": 7, "without": [7, 11, 18], "scheme": 7, "vibrant": 7, "qualit": 7, "present": [7, 17], "paul": 7, "tol": 7, "blog": 7, "hint": 8, "annot": 8, "throughout": 8, "alia": [8, 11], "complex128": [8, 11], "ndarrai": [8, 9], "dtype": 8, "float64": [8, 9, 11], "int64": 8, "reconstruct": [9, 18], "perform_zhit": [9, 18], "lowess": [9, 18], "interpol": [9, 18], "akima": [9, 18], "window": [9, 12, 16], "num_point": 9, "polynomial_ord": 9, "num_iter": 9, "center": 9, "ehm": [9, 18], "steadi": 9, "drift": [9, 12, 18], "applic": [9, 12, 16, 17, 19], "involv": [9, 17], "offset": 9, "unaffect": 9, "artifact": 9, "typic": [9, 18], "around": [9, 17], "1000": [9, 13, 18], "why": 9, "boxcar": 9, "log": [9, 15], "g\u00f6hr": [9, 18], "kau": [9, 18], "r\u00f6seler": [9, 18], "schiller": [9, 18], "chimica": [9, 18], "hungarica": [9, 18], "137": [9, 13, 18], "145": [9, 18], "157": [9, 13, 18], "strunz": [9, 18], "2001": [9, 18], "trend": [9, 18], "spectroscopi": [9, 18], "nois": [9, 15, 17, 18], "richter": [9, 18], "g\u00fclzow": [9, 18], "wagner": [9, 18], "374": [9, 18], "378": [9, 13, 18], "b007678n": [9, 18], "local": 9, "scatterplot": 9, "savgol": 9, "savitzki": 9, "golai": 9, "expect": 9, "space": 9, "spline": [9, 18], "cubic": 9, "pchip": 9, "hermit": 9, "polynomi": 9, "scipi": [9, 16], "signal": [9, 14, 15], "sym": 9, "cosin": 9, "triang": 9, "while": [9, 13], "logarithm": 9, "cover": 9, "desir": 9, "zhitresult": [9, 18], "here": [10, 11, 12, 19], "quick": 10, "guid": 10, "instal": [10, 19], "command": [10, 15, 16, 19], "cli": [10, 19], "extract": [11, 15], "quantit": [11, 15], "conveni": 11, "term": 11, "compon": 11, "few": [11, 17], "softwar": [11, 14, 15], "explain": 11, "pdf": [11, 19], "avail": [11, 13, 17, 19], "cannot": [11, 17], "mention": [11, 15], "earlier": 11, "bracket": 11, "z_i": 11, "z_": 11, "z_1": 11, "z_2": 11, "ldot": 11, "z_n": 11, "parenthes": 11, "group": [11, 17], "randl": [11, 12, 18], "rw": [11, 15], "straightforward": 11, "As": [11, 15], "seen": 11, "r_0": [11, 15], "c_1": [11, 15], "r_2": [11, 15], "y_3": 11, "conflict": [11, 16], "overlap": 11, "In": 11, "nth": 11, "curli": 11, "brace": 11, "enclos": 11, "let": 11, "redefin": 11, "20f": 11, "sol": 11, "25e": 11, "6": [11, 18], "dl": 11, "50": 11, "200": [11, 15], "357e": 11, "150": 11, "diff": 11, "now": [11, 16], "25": [11, 13], "microfarad": 11, "millifarad": 11, "doubl": [11, 15], "millisiemen": 11, "updat": 11, "r_sol": 11, "c_dl": 11, "y_diff": 11, "share": 11, "store": [11, 12], "sinc": [11, 13], "precis": 11, "scientif": 11, "notat": 11, "place": 11, "000e": 11, "01f": 11, "00": 11, "500e": 11, "05": 11, "24": [11, 13], "02": 11, "536e": 11, "dedic": 11, "metadata": 11, "ensur": 11, "break": 11, "were": 11, "newer": [11, 16], "version": [11, 16], "000000000000e": 11, "500000000000e": 11, "357000000000e": 11, "535500000000e": 11, "insid": [11, 16], "outermost": 11, "w_diff": 11, "300": 11, "inner_seri": 11, "outer_seri": 11, "lack": 11, "runtim": 11, "accept": 11, "turn": [11, 13, 15], "regard": [11, 15], "somenewel": 11, "def": [11, 13], "self": 11, "1j": 11, "ud": 11, "bundl": 11, "henc": 11, "explicit": 11, "intern": 11, "act": [11, 13], "wrapper": [11, 13, 14], "handl": 11, "input": [11, 12], "them": 11, "along": [11, 15], "togeth": 11, "infin": 11, "offer": 11, "compar": [11, 15], "_sympi": 11, "special": [11, 12], "logspac": 11, "num": 11, "assert": [11, 14], "csv": [12, 13], "singl": [12, 17], "write": [12, 13], "python": [12, 14, 16, 19], "script": [12, 16], "jupyt": [12, 16], "notebook": [12, 16], "goal": 12, "quickli": [12, 19], "someth": [12, 13], "itself": 12, "sever": [12, 14], "subcommand": 12, "modul": [12, 16], "replac": [12, 17], "python3": 12, "whatev": 12, "py": 12, "bash": 12, "shell": 12, "abbrevi": 12, "across": 12, "sake": 12, "directori": 12, "dir": 12, "svg": 12, "unless": 12, "simplifi": [12, 18], "zhit": [12, 18], "config": 12, "save": 12, "don": 12, "explicitli": [12, 16], "plain": 13, "alwai": [13, 15], "lowest": [13, 17], "pyplot": 13, "plt": 13, "found": [13, 19], "destruct": 13, "29": 13, "1e3": 13, "22": 13, "well": 13, "top": 13, "1e1": 13, "after": 13, "quit": [13, 15], "easi": [13, 15, 16], "read_json": 13, "parse_json": 13, "print": 13, "to_markdown": [13, 15], "deg": 13, "109": 13, "26": 13, "5557": 13, "112": 13, "197": 13, "13": 13, "6911": 13, "7196": 13, "86": 13, "058": 13, "1662": 13, "117": 13, "446": 13, "17": 13, "423": 13, "5179": 13, "47": 13, "116": 13, "906": 13, "4664": 13, "125": 13, "802": 13, "6762": 13, "3727": 13, "59": 13, "124": 13, "835": 13, "8523": 13, "138": 13, "876": 13, "9875": 13, "2682": 13, "77": 13, "78": 13, "0894": 13, "158": 13, "362": 13, "5449": 13, "1930": 13, "972": 13, "96": 13, "4806": 13, "185": 13, "104": 13, "31": 13, "4143": 13, "1389": 13, "186": 13, "637": 13, "205": 13, "217": 13, "769": 13, "014": 13, "221": 13, "691": 13, "120": 13, "399": 13, "252": 13, "275": 13, "28": 13, "5062": 13, "719": 13, "686": 13, "257": 13, "437": 13, "118": 13, "651": 13, "283": 13, "464": 13, "7446": 13, "517": 13, "947": 13, "288": 13, "308": 13, "7764": 13, "372": 13, "759": 13, "311": 13, "563": 13, "97": 13, "2957": 13, "326": 13, "402": 13, "3427": 13, "268": 13, "328": 13, "959": 13, "554": 13, "340": 13, "155": 13, "7413": 13, "193": 13, "342": 13, "639": 13, "8887": 13, "351": 13, "603": 13, "9657": 13, "354": 13, "649": 13, "74": 13, "5879": 13, "408": 13, "11": [13, 16], "877": 13, "366": 13, "4": [13, 14], "73": 13, "2559": 13, "373": 13, "3063": 13, "71": 13, "9686": 13, "778": 13, "385": 13, "996": 13, "0974": 13, "51": 13, "7947": 13, "392": 13, "1022": 13, "831": 13, "1184": 13, "37": 13, "2759": 13, "407": 13, "81": 13, "1148": 13, "415": 13, "368": 13, "2613": 13, "827": 13, "424": 13, "086": 13, "8173": 13, "432": 13, "682": 13, "4398": 13, "19": [13, 17], "307": 13, "442": 13, "528": 13, "90": 13, "7275": 13, "451": 13, "733": 13, "5863": 13, "895": 13, "462": 13, "638": 13, "3932": 13, "472": 13, "371": 13, "6508": 13, "484": 13, "246": 13, "99": [13, 15], "3993": 13, "494": 13, "5998": 13, "19686": 13, "507": 13, "068": 13, "102": 13, "4155": 13, "17947": 13, "530": 13, "727": 13, "069": 13, "540": 13, "0943": 13, "72759": 13, "773": 13, "271": 13, "564": 13, "487": 13, "6447": 13, "6827": 13, "578": 13, "721": 13, "924": 13, "587": 13, "0845": 13, "9307": 13, "602": 13, "093": 13, "083": 13, "610": 13, "43768": 13, "3895": 13, "624": 13, "9026": 13, "631": 13, "783": 13, "73106": 13, "645": 13, "479": 13, "6181": 13, "809": 13, "99147": 13, "wish": [13, 16, 19], "submit": [13, 19], "pull": [13, 19], "request": [13, 19], "licens": [13, 19], "gplv3": [13, 19], "later": [13, 16, 19], "wai": [14, 15, 19], "review": 14, "develop": 14, "prior": [14, 15], "proceed": [14, 15], "highli": 14, "recommend": 14, "instrument": [14, 15], "potentiostat": [14, 15], "galvanostat": [14, 15], "tool": [14, 15, 17], "bht": 14, "drttool": 14, "pydrttool": 14, "rq": 14, "tr": [14, 16], "nnl": 14, "rbf": [14, 16], "guarante": 14, "unsuit": 14, "sharp": 14, "sharper": 14, "repeat": 14, "mock_data": [14, 15, 17, 18], "isinst": 14, "demonstr": 14, "veri": 15, "aim": 15, "physic": [15, 17], "characterist": 15, "aspect": 15, "investig": 15, "cabl": 15, "tri": 15, "achiev": 15, "still": [15, 17], "thu": 15, "c_2": 15, "r_1": 15, "y_4": 15, "r_3": 15, "content": 15, "std": 15, "err": 15, "9526": 15, "0270415": 15, "No": 15, "295": 15, "0161802": 15, "98617e": 15, "00251256": 15, "93": 15, "0228977": 15, "w_1": 15, "000400664": 15, "0303443": 15, "334885584145635": 15, "8934043180641": 15, "617680187664888": 15, "akaik": 15, "info": 15, "1680": 15, "3191375061115": 15, "1670": 15, "0169224533793": 15, "freedom": 15, "53": 15, "58": 15, "45": 15, "least_squar": 15, "close": [15, 18], "inappropri": 15, "good": [15, 17], "reproduc": 15, "w_4": 15, "linux": 16, "maco": 16, "jinja": 16, "numdifftool": 16, "odfpi": 16, "openpyxl": 16, "statsmodel": 16, "tabul": 16, "xdg": 16, "pip": 16, "cvxopt": 16, "kvxopt": 16, "fork": 16, "cvxpy": 16, "who": 16, "step": [16, 18], "sure": 16, "section": [16, 19], "familiar": 16, "virtual": 16, "consid": 16, "pipx": 16, "prevent": 16, "potenti": 16, "aris": 16, "older": 16, "date": 16, "upgrad": 16, "abl": 16, "kk": 17, "variant": 17, "arbitrari": 17, "thing": 17, "keep": 17, "mind": 17, "signific": 17, "over": 17, "differenti": 17, "manual": 17, "choos": 17, "lin": 17, "releas": [17, 19], "last": 17, "seem": 17, "randomli": 17, "hope": 17, "third": 17, "inde": 17, "mutual": 18, "algorith": 18, "ln": 18, "omega_o": 18, "approx": 18, "int_": 18, "omega_": 18, "varphi": 18, "rm": 18, "interest": 18, "portion": 18, "perfect": 18, "minor": 18, "deviat": 18, "even": 18, "drifting_randl": 18, "primari": 19, "program": 19, "graphic": 19, "dearei": 19, "changelog": 19, "encount": 19, "bug": 19, "featur": 19, "pleas": 19, "contribut": 19, "project": 19, "read": 19, "readm": 19}, "objects": {"": [[9, 0, 0, "module-0", "pyimpspec"]], "pyimpspec": [[3, 1, 1, "", "BHTResult"], [1, 1, 1, "", "Circuit"], [1, 1, 1, "", "CircuitBuilder"], [8, 3, 1, "", "ComplexImpedance"], [8, 3, 1, "", "ComplexImpedances"], [8, 3, 1, "", "ComplexResidual"], [8, 3, 1, "", "ComplexResiduals"], [1, 1, 1, "", "Connection"], [1, 1, 1, "", "Container"], [1, 1, 1, "", "ContainerDefinition"], [3, 1, 1, "", "DRTResult"], [2, 1, 1, "", "DataSet"], [1, 1, 1, "", "Element"], [1, 1, 1, "", "ElementDefinition"], [5, 1, 1, "", "FitResult"], [5, 1, 1, "", "FittedParameter"], [8, 3, 1, "", "Frequencies"], [8, 3, 1, "", "Frequency"], [8, 3, 1, "", "Gamma"], [8, 3, 1, "", "Gammas"], [8, 3, 1, "", "Impedance"], [8, 3, 1, "", "Impedances"], [8, 3, 1, "", "Indices"], [3, 1, 1, "", "MRQFitResult"], [1, 1, 1, "", "Parallel"], [1, 1, 1, "", "ParameterDefinition"], [8, 3, 1, "", "Phase"], [8, 3, 1, "", "Phases"], [8, 3, 1, "", "Residual"], [8, 3, 1, "", "Residuals"], [1, 1, 1, "", "Series"], [1, 1, 1, "", "SubcircuitDefinition"], [3, 1, 1, "", "TRNNLSResult"], [3, 1, 1, "", "TRRBFResult"], [6, 1, 1, "", "TestResult"], [8, 3, 1, "", "TimeConstant"], [8, 3, 1, "", "TimeConstants"], [9, 1, 1, "", "ZHITResult"], [3, 4, 1, "", "calculate_drt"], [3, 4, 1, "", "calculate_drt_bht"], [3, 4, 1, "", "calculate_drt_mrq_fit"], [3, 4, 1, "", "calculate_drt_tr_nnls"], [3, 4, 1, "", "calculate_drt_tr_rbf"], [2, 4, 1, "", "dataframe_to_data_sets"], [4, 0, 0, "-", "exceptions"], [5, 4, 1, "", "fit_circuit"], [0, 4, 1, "", "get_default_num_procs"], [1, 4, 1, "", "get_elements"], [2, 4, 1, "", "get_parsers"], [7, 0, 0, "module-0", "mpl"], [1, 4, 1, "", "parse_cdc"], [2, 4, 1, "", "parse_data"], [6, 4, 1, "", "perform_exploratory_tests"], [6, 4, 1, "", "perform_test"], [9, 4, 1, "", "perform_zhit"], [1, 4, 1, "", "register_element"], [0, 4, 1, "", "set_default_num_procs"], [1, 4, 1, "", "simulate_spectrum"]], "pyimpspec.BHTResult": [[3, 2, 1, "", "get_drt_data"], [3, 2, 1, "", "get_gammas"], [3, 2, 1, "", "get_label"], [3, 2, 1, "", "get_peaks"], [3, 2, 1, "", "get_scores"], [3, 2, 1, "", "to_peaks_dataframe"], [3, 2, 1, "", "to_scores_dataframe"], [3, 2, 1, "", "to_statistics_dataframe"]], "pyimpspec.Circuit": [[1, 2, 1, "", "generate_element_identifiers"], [1, 2, 1, "", "get_connections"], [1, 2, 1, "", "get_element_name"], [1, 2, 1, "", "get_elements"], [1, 2, 1, "", "get_impedances"], [1, 2, 1, "", "to_circuitikz"], [1, 2, 1, "", "to_drawing"], [1, 2, 1, "", "to_latex"], [1, 2, 1, "", "to_string"], [1, 2, 1, "", "to_sympy"]], "pyimpspec.CircuitBuilder": [[1, 2, 1, "", "add"], [1, 2, 1, "", "parallel"], [1, 2, 1, "", "series"], [1, 2, 1, "", "to_circuit"], [1, 2, 1, "", "to_string"]], "pyimpspec.Connection": [[1, 2, 1, "", "append"], [1, 2, 1, "", "clear"], [1, 2, 1, "", "contains"], [1, 2, 1, "", "count"], [1, 2, 1, "", "extend"], [1, 2, 1, "", "generate_element_identifiers"], [1, 2, 1, "", "get_connections"], [1, 2, 1, "", "get_element_name"], [1, 2, 1, "", "get_elements"], [1, 2, 1, "", "get_impedances"], [1, 2, 1, "", "index"], [1, 2, 1, "", "insert"], [1, 2, 1, "", "pop"], [1, 2, 1, "", "remove"], [1, 2, 1, "", "to_circuitikz"], [1, 2, 1, "", "to_drawing"], [1, 2, 1, "", "to_latex"], [1, 2, 1, "", "to_string"], [1, 2, 1, "", "to_sympy"]], "pyimpspec.Container": [[1, 2, 1, "", "generate_element_identifiers"], [1, 2, 1, "", "get_default_subcircuit"], [1, 2, 1, "", "get_default_subcircuits"], [1, 2, 1, "", "get_subcircuit"], [1, 2, 1, "", "get_subcircuit_description"], [1, 2, 1, "", "get_subcircuit_descriptions"], [1, 2, 1, "", "get_subcircuits"], [1, 2, 1, "", "get_unit"], [1, 2, 1, "", "get_units"], [1, 2, 1, "", "set_subcircuits"], [1, 2, 1, "", "to_string"], [1, 2, 1, "", "to_sympy"]], "pyimpspec.DRTResult": [[3, 2, 1, "", "get_bode_data"], [3, 2, 1, "", "get_frequencies"], [3, 2, 1, "", "get_impedances"], [3, 2, 1, "", "get_label"], [3, 2, 1, "", "get_nyquist_data"], [3, 2, 1, "", "get_residuals_data"], [3, 2, 1, "", "get_time_constants"], [3, 2, 1, "", "to_peaks_dataframe"], [3, 2, 1, "", "to_statistics_dataframe"]], "pyimpspec.DataSet": [[2, 2, 1, "", "average"], [2, 2, 1, "", "duplicate"], [2, 2, 1, "", "from_dict"], [2, 2, 1, "", "get_bode_data"], [2, 2, 1, "", "get_frequencies"], [2, 2, 1, "", "get_impedances"], [2, 2, 1, "", "get_label"], [2, 2, 1, "", "get_magnitudes"], [2, 2, 1, "", "get_mask"], [2, 2, 1, "", "get_num_points"], [2, 2, 1, "", "get_nyquist_data"], [2, 2, 1, "", "get_path"], [2, 2, 1, "", "get_phases"], [2, 2, 1, "", "high_pass"], [2, 2, 1, "", "low_pass"], [2, 2, 1, "", "set_label"], [2, 2, 1, "", "set_mask"], [2, 2, 1, "", "set_path"], [2, 2, 1, "", "subtract_impedances"], [2, 2, 1, "", "to_dataframe"], [2, 2, 1, "", "to_dict"]], "pyimpspec.Element": [[1, 2, 1, "", "are_fixed"], [1, 2, 1, "", "are_fixed_by_default"], [1, 2, 1, "", "get_default_lower_limit"], [1, 2, 1, "", "get_default_lower_limits"], [1, 2, 1, "", "get_default_upper_limit"], [1, 2, 1, "", "get_default_upper_limits"], [1, 2, 1, "", "get_default_value"], [1, 2, 1, "", "get_default_values"], [1, 2, 1, "", "get_description"], [1, 2, 1, "", "get_extended_description"], [1, 2, 1, "", "get_impedances"], [1, 2, 1, "", "get_label"], [1, 2, 1, "", "get_lower_limit"], [1, 2, 1, "", "get_lower_limits"], [1, 2, 1, "", "get_name"], [1, 2, 1, "", "get_symbol"], [1, 2, 1, "", "get_unit"], [1, 2, 1, "", "get_units"], [1, 2, 1, "", "get_upper_limit"], [1, 2, 1, "", "get_upper_limits"], [1, 2, 1, "", "get_value"], [1, 2, 1, "", "get_value_description"], [1, 2, 1, "", "get_value_descriptions"], [1, 2, 1, "", "get_values"], [1, 2, 1, "", "is_fixed"], [1, 2, 1, "", "is_fixed_by_default"], [1, 2, 1, "", "reset_parameter"], [1, 2, 1, "", "reset_parameters"], [1, 2, 1, "", "set_fixed"], [1, 2, 1, "", "set_label"], [1, 2, 1, "", "set_lower_limits"], [1, 2, 1, "", "set_upper_limits"], [1, 2, 1, "", "set_values"], [1, 2, 1, "", "to_latex"], [1, 2, 1, "", "to_string"], [1, 2, 1, "", "to_sympy"]], "pyimpspec.FitResult": [[5, 2, 1, "", "get_bode_data"], [5, 2, 1, "", "get_frequencies"], [5, 2, 1, "", "get_impedances"], [5, 2, 1, "", "get_label"], [5, 2, 1, "", "get_nyquist_data"], [5, 2, 1, "", "get_parameters"], [5, 2, 1, "", "get_residuals_data"], [5, 2, 1, "", "to_parameters_dataframe"], [5, 2, 1, "", "to_statistics_dataframe"]], "pyimpspec.FittedParameter": [[5, 2, 1, "", "get_error"], [5, 2, 1, "", "get_relative_error"], [5, 2, 1, "", "get_unit"], [5, 2, 1, "", "get_value"], [5, 2, 1, "", "is_fixed"]], "pyimpspec.MRQFitResult": [[3, 2, 1, "", "get_drt_data"], [3, 2, 1, "", "get_gammas"], [3, 2, 1, "", "get_label"], [3, 2, 1, "", "get_peaks"], [3, 2, 1, "", "to_peaks_dataframe"], [3, 2, 1, "", "to_statistics_dataframe"]], "pyimpspec.Parallel": [[1, 2, 1, "", "to_string"], [1, 2, 1, "", "to_sympy"]], "pyimpspec.Series": [[1, 2, 1, "", "to_string"], [1, 2, 1, "", "to_sympy"]], "pyimpspec.TRNNLSResult": [[3, 2, 1, "", "get_drt_data"], [3, 2, 1, "", "get_gammas"], [3, 2, 1, "", "get_label"], [3, 2, 1, "", "get_peaks"], [3, 2, 1, "", "to_peaks_dataframe"], [3, 2, 1, "", "to_statistics_dataframe"]], "pyimpspec.TRRBFResult": [[3, 2, 1, "", "get_drt_credible_intervals_data"], [3, 2, 1, "", "get_drt_data"], [3, 2, 1, "", "get_gammas"], [3, 2, 1, "", "get_label"], [3, 2, 1, "", "get_peaks"], [3, 2, 1, "", "to_peaks_dataframe"], [3, 2, 1, "", "to_statistics_dataframe"]], "pyimpspec.TestResult": [[6, 2, 1, "", "calculate_score"], [6, 2, 1, "", "get_bode_data"], [6, 2, 1, "", "get_frequencies"], [6, 2, 1, "", "get_impedances"], [6, 2, 1, "", "get_label"], [6, 2, 1, "", "get_nyquist_data"], [6, 2, 1, "", "get_residuals_data"], [6, 2, 1, "", "get_series_capacitance"], [6, 2, 1, "", "get_series_inductance"], [6, 2, 1, "", "get_series_resistance"], [6, 2, 1, "", "to_statistics_dataframe"]], "pyimpspec.ZHITResult": [[9, 2, 1, "", "get_bode_data"], [9, 2, 1, "", "get_frequencies"], [9, 2, 1, "", "get_impedances"], [9, 2, 1, "", "get_label"], [9, 2, 1, "", "get_nyquist_data"], [9, 2, 1, "", "get_residuals_data"], [9, 2, 1, "", "to_statistics_dataframe"]], "pyimpspec.circuit": [[1, 0, 0, "-", "elements"]], "pyimpspec.circuit.elements": [[1, 1, 1, "", "Capacitor"], [1, 1, 1, "", "ConstantPhaseElement"], [1, 1, 1, "", "DeLevieFiniteLength"], [1, 1, 1, "", "Gerischer"], [1, 1, 1, "", "HavriliakNegami"], [1, 1, 1, "", "HavriliakNegamiAlternative"], [1, 1, 1, "", "Inductor"], [1, 1, 1, "", "KramersKronigRC"], [1, 1, 1, "", "ModifiedInductor"], [1, 1, 1, "", "Resistor"], [1, 1, 1, "", "TransmissionLineModel"], [1, 1, 1, "", "TransmissionLineModelBlockingCPE"], [1, 1, 1, "", "TransmissionLineModelBlockingOpen"], [1, 1, 1, "", "TransmissionLineModelBlockingShort"], [1, 1, 1, "", "TransmissionLineModelNonblockingCPE"], [1, 1, 1, "", "TransmissionLineModelNonblockingOpen"], [1, 1, 1, "", "TransmissionLineModelNonblockingShort"], [1, 1, 1, "", "Warburg"], [1, 1, 1, "", "WarburgOpen"], [1, 1, 1, "", "WarburgShort"]], "pyimpspec.data": [[2, 0, 0, "-", "formats"]], "pyimpspec.data.formats": [[2, 4, 1, "", "parse_csv"], [2, 4, 1, "", "parse_dfr"], [2, 4, 1, "", "parse_dta"], [2, 4, 1, "", "parse_i2b"], [2, 4, 1, "", "parse_ids"], [2, 4, 1, "", "parse_mpt"], [2, 4, 1, "", "parse_p00"], [2, 4, 1, "", "parse_spreadsheet"]], "pyimpspec.exceptions": [[4, 5, 1, "", "ConnectionWithoutElements"], [4, 5, 1, "", "DRTError"], [4, 5, 1, "", "DuplicateParameterDefinition"], [4, 5, 1, "", "ExpectedNumericValue"], [4, 5, 1, "", "ExpectedParameterIdentifier"], [4, 5, 1, "", "FittingError"], [4, 5, 1, "", "ImpedanceError"], [4, 5, 1, "", "InfiniteImpedance"], [4, 5, 1, "", "InfiniteLimit"], [4, 5, 1, "", "InsufficientElementsInParallelConnection"], [4, 5, 1, "", "InsufficientTokens"], [4, 5, 1, "", "InvalidElementSymbol"], [4, 5, 1, "", "InvalidEquation"], [4, 5, 1, "", "InvalidNumericValue"], [4, 5, 1, "", "InvalidParameterDefinition"], [4, 5, 1, "", "InvalidParameterKey"], [4, 5, 1, "", "InvalidParameterLowerLimit"], [4, 5, 1, "", "InvalidParameterUpperLimit"], [4, 5, 1, "", "KramersKronigError"], [4, 5, 1, "", "NotANumberImpedance"], [4, 5, 1, "", "ParsingError"], [4, 5, 1, "", "TokenizingError"], [4, 5, 1, "", "TooManyParameterDefinitions"], [4, 5, 1, "", "UnexpectedCharacter"], [4, 5, 1, "", "UnexpectedIdentifier"], [4, 5, 1, "", "UnexpectedToken"], [4, 5, 1, "", "UnsupportedFileFormat"], [4, 5, 1, "", "ZHITError"]], "pyimpspec.mpl": [[7, 4, 1, "", "plot_bht_scores"], [7, 4, 1, "", "plot_bode"], [7, 4, 1, "", "plot_circuit"], [7, 4, 1, "", "plot_complex"], [7, 4, 1, "", "plot_data"], [7, 4, 1, "", "plot_drt"], [7, 4, 1, "", "plot_fit"], [7, 4, 1, "", "plot_gamma"], [7, 4, 1, "", "plot_imaginary"], [7, 4, 1, "", "plot_magnitude"], [7, 4, 1, "", "plot_mu_xps"], [7, 4, 1, "", "plot_nyquist"], [7, 4, 1, "", "plot_phase"], [7, 4, 1, "", "plot_real"], [7, 4, 1, "", "plot_residuals"], [7, 4, 1, "", "plot_tests"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "exception", "Python exception"]}, "titleterms": {"api": [0, 16], "document": [0, 19], "content": [0, 10, 19], "equival": [1, 11], "circuit": [1, 5, 11, 15], "function": [1, 2, 3, 5, 6, 9], "base": [1, 3], "class": [1, 2, 3, 5, 6, 9], "connect": 1, "element": [1, 11], "registr": 1, "data": [2, 13], "pars": [2, 13], "wrapper": [2, 3, 7], "format": 2, "specif": 2, "distribut": [3, 14], "relax": [3, 14], "time": [3, 14], "method": 3, "bht": 3, "m": 3, "rq": 3, "fit": [3, 5, 15], "tr": 3, "nnl": 3, "rbf": 3, "except": 4, "kramer": [6, 17], "kronig": [6, 17], "test": [6, 17], "plot": [7, 13], "matplotlib": 7, "primit": 7, "exampl": 7, "plot_circuit": 7, "plot_data": 7, "plot_drt": 7, "plot_fit": 7, "plot_test": 7, "type": 8, "alias": 8, "z": [9, 18], "hit": [9, 18], "analysi": [9, 18], "get": 10, "start": 10, "descript": 11, "code": 11, "cdc": 11, "creat": 11, "extend": 11, "syntax": 11, "other": 11, "wai": 11, "user": 11, "defin": 11, "simul": 11, "spectra": 11, "command": 12, "line": 12, "interfac": 12, "cli": [12, 16], "mask": 13, "point": 13, "custom": 13, "parser": 13, "perform": 15, "gener": 15, "tabl": 15, "diagram": 15, "instal": 16, "support": 16, "platform": 16, "requir": 16, "us": 16, "run": 16, "program": 16, "welcom": 19, "pyimpspec": 19, "": 19}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"API Documentation": [[0, "api-documentation"]], "Contents:": [[0, null], [10, null], [19, null]], "Equivalent circuits": [[1, "equivalent-circuits"], [11, "equivalent-circuits"]], "Functions": [[1, "module-pyimpspec"], [6, "module-pyimpspec"]], "Base classes": [[1, "module-0"]], "Connection classes": [[1, "module-1"]], "Circuit classes": [[1, "module-2"]], "Element classes": [[1, "module-pyimpspec.circuit.elements"]], "Element registration classes": [[1, "module-4"]], "Data parsing": [[2, "data-parsing"], [13, "data-parsing"]], "Wrapper functions": [[2, "module-pyimpspec"]], "Format-specific functions": [[2, "module-pyimpspec.data.formats"]], "Class": [[2, "module-0"], [6, "module-0"], [9, "module-0"]], "Distribution of relaxation times": [[3, "distribution-of-relaxation-times"], [14, "distribution-of-relaxation-times"]], "Wrapper function and base class": [[3, "module-pyimpspec"]], "Method functions and classes": [[3, "method-functions-and-classes"]], "BHT method": [[3, "module-0"]], "m(RQ)fit method": [[3, "module-2"]], "TR-NNLS method": [[3, "module-4"]], "TR-RBF method": [[3, "module-6"]], "Exceptions": [[4, "module-pyimpspec.exceptions"]], "Circuit fitting": [[5, "circuit-fitting"], [15, "circuit-fitting"]], "Function": [[5, "module-pyimpspec"], [9, "module-pyimpspec"]], "Classes": [[5, "module-0"]], "Kramers-Kronig testing": [[6, "kramers-kronig-testing"], [17, "kramers-kronig-testing"]], "Plotting - matplotlib": [[7, "plotting-matplotlib"]], "Wrappers": [[7, "wrappers"]], "Primitives": [[7, "primitives"]], "Examples": [[7, "examples"]], "plot_circuit": [[7, "plot-circuit"]], "plot_data": [[7, "plot-data"]], "plot_drt": [[7, "plot-drt"]], "plot_fit": [[7, "plot-fit"]], "plot_tests": [[7, "plot-tests"]], "Typing": [[8, "typing"]], "Aliases": [[8, "aliases"]], "Z-HIT analysis": [[9, "z-hit-analysis"], [18, "z-hit-analysis"]], "Getting started": [[10, "getting-started"]], "Circuit description code (CDC)": [[11, "circuit-description-code-cdc"]], "Creating circuits": [[11, "creating-circuits"]], "Extended CDC syntax": [[11, "extended-cdc-syntax"]], "Other ways of creating circuits": [[11, "other-ways-of-creating-circuits"]], "User-defined elements": [[11, "user-defined-elements"]], "Simulating spectra": [[11, "simulating-spectra"]], "Command-line interface (CLI)": [[12, "command-line-interface-cli"]], "Plotting data": [[13, "plotting-data"]], "Masking data points": [[13, "masking-data-points"]], "Custom parsers": [[13, "custom-parsers"]], "Performing a fit": [[15, "performing-a-fit"]], "Generating tables and diagrams": [[15, "generating-tables-and-diagrams"]], "Installing": [[16, "installing"], [16, "id1"]], "Supported platforms": [[16, "supported-platforms"]], "Requirements": [[16, "requirements"]], "Using the API": [[16, "using-the-api"]], "Running the CLI program": [[16, "running-the-cli-program"]], "Welcome to pyimpspec\u2019s documentation!": [[19, "welcome-to-pyimpspec-s-documentation"]]}, "indexentries": {"get_default_num_procs() (in module pyimpspec)": [[0, "pyimpspec.get_default_num_procs"]], "module": [[0, "module-pyimpspec"], [1, "module-0"], [1, "module-1"], [1, "module-2"], [1, "module-3"], [1, "module-4"], [1, "module-pyimpspec"], [1, "module-pyimpspec.circuit.elements"], [2, "module-0"], [2, "module-pyimpspec"], [2, "module-pyimpspec.data.formats"], [3, "module-0"], [3, "module-1"], [3, "module-2"], [3, "module-3"], [3, "module-4"], [3, "module-5"], [3, "module-6"], [3, "module-7"], [3, "module-pyimpspec"], [4, "module-pyimpspec.exceptions"], [5, "module-0"], [5, "module-pyimpspec"], [6, "module-0"], [6, "module-pyimpspec"], [7, "module-0"], [7, "module-pyimpspec.mpl"], [9, "module-0"], [9, "module-pyimpspec"]], "pyimpspec": [[0, "module-pyimpspec"], [1, "module-0"], [1, "module-1"], [1, "module-2"], [1, "module-3"], [1, "module-4"], [1, "module-pyimpspec"], [2, "module-0"], [2, "module-pyimpspec"], [3, "module-0"], [3, "module-1"], [3, "module-2"], [3, "module-3"], [3, "module-4"], [3, "module-5"], [3, "module-6"], [3, "module-7"], [3, "module-pyimpspec"], [5, "module-0"], [5, "module-pyimpspec"], [6, "module-0"], [6, "module-pyimpspec"], [9, "module-0"], [9, "module-pyimpspec"]], "set_default_num_procs() (in module pyimpspec)": [[0, "pyimpspec.set_default_num_procs"]], "capacitor (class in pyimpspec.circuit.elements)": [[1, "pyimpspec.circuit.elements.Capacitor"]], "circuit (class in pyimpspec)": [[1, "pyimpspec.Circuit"]], "circuitbuilder (class in pyimpspec)": [[1, "pyimpspec.CircuitBuilder"]], "connection (class in pyimpspec)": [[1, "pyimpspec.Connection"]], "constantphaseelement (class in pyimpspec.circuit.elements)": [[1, "pyimpspec.circuit.elements.ConstantPhaseElement"]], "container (class in pyimpspec)": [[1, "pyimpspec.Container"]], "containerdefinition (class in pyimpspec)": [[1, "pyimpspec.ContainerDefinition"]], "deleviefinitelength (class in pyimpspec.circuit.elements)": [[1, "pyimpspec.circuit.elements.DeLevieFiniteLength"]], "element (class in pyimpspec)": [[1, "pyimpspec.Element"]], "elementdefinition (class in pyimpspec)": [[1, "pyimpspec.ElementDefinition"]], "gerischer (class in pyimpspec.circuit.elements)": [[1, "pyimpspec.circuit.elements.Gerischer"]], "havriliaknegami (class in pyimpspec.circuit.elements)": [[1, "pyimpspec.circuit.elements.HavriliakNegami"]], "havriliaknegamialternative (class in pyimpspec.circuit.elements)": [[1, "pyimpspec.circuit.elements.HavriliakNegamiAlternative"]], "inductor (class in pyimpspec.circuit.elements)": [[1, "pyimpspec.circuit.elements.Inductor"]], "kramerskronigrc (class in pyimpspec.circuit.elements)": [[1, "pyimpspec.circuit.elements.KramersKronigRC"]], "modifiedinductor (class in pyimpspec.circuit.elements)": [[1, "pyimpspec.circuit.elements.ModifiedInductor"]], "parallel (class in pyimpspec)": [[1, "pyimpspec.Parallel"]], "parameterdefinition (class in pyimpspec)": [[1, "pyimpspec.ParameterDefinition"]], "resistor (class in pyimpspec.circuit.elements)": [[1, "pyimpspec.circuit.elements.Resistor"]], "series (class in pyimpspec)": [[1, "pyimpspec.Series"]], "subcircuitdefinition (class in pyimpspec)": [[1, "pyimpspec.SubcircuitDefinition"]], "transmissionlinemodel (class in pyimpspec.circuit.elements)": [[1, "pyimpspec.circuit.elements.TransmissionLineModel"]], "transmissionlinemodelblockingcpe (class in pyimpspec.circuit.elements)": [[1, "pyimpspec.circuit.elements.TransmissionLineModelBlockingCPE"]], "transmissionlinemodelblockingopen (class in pyimpspec.circuit.elements)": [[1, "pyimpspec.circuit.elements.TransmissionLineModelBlockingOpen"]], "transmissionlinemodelblockingshort (class in pyimpspec.circuit.elements)": [[1, "pyimpspec.circuit.elements.TransmissionLineModelBlockingShort"]], "transmissionlinemodelnonblockingcpe (class in pyimpspec.circuit.elements)": [[1, "pyimpspec.circuit.elements.TransmissionLineModelNonblockingCPE"]], "transmissionlinemodelnonblockingopen (class in pyimpspec.circuit.elements)": [[1, "pyimpspec.circuit.elements.TransmissionLineModelNonblockingOpen"]], "transmissionlinemodelnonblockingshort (class in pyimpspec.circuit.elements)": [[1, "pyimpspec.circuit.elements.TransmissionLineModelNonblockingShort"]], "warburg (class in pyimpspec.circuit.elements)": [[1, "pyimpspec.circuit.elements.Warburg"]], "warburgopen (class in pyimpspec.circuit.elements)": [[1, "pyimpspec.circuit.elements.WarburgOpen"]], "warburgshort (class in pyimpspec.circuit.elements)": [[1, "pyimpspec.circuit.elements.WarburgShort"]], "add() (pyimpspec.circuitbuilder method)": [[1, "pyimpspec.CircuitBuilder.add"]], "append() (pyimpspec.connection method)": [[1, "pyimpspec.Connection.append"]], "are_fixed() (pyimpspec.element method)": [[1, "pyimpspec.Element.are_fixed"]], "are_fixed_by_default() (pyimpspec.element class method)": [[1, "pyimpspec.Element.are_fixed_by_default"]], "clear() (pyimpspec.connection method)": [[1, "pyimpspec.Connection.clear"]], "contains() (pyimpspec.connection method)": [[1, "pyimpspec.Connection.contains"]], "count() (pyimpspec.connection method)": [[1, "pyimpspec.Connection.count"]], "extend() (pyimpspec.connection method)": [[1, "pyimpspec.Connection.extend"]], "generate_element_identifiers() (pyimpspec.circuit method)": [[1, "pyimpspec.Circuit.generate_element_identifiers"]], "generate_element_identifiers() (pyimpspec.connection method)": [[1, "pyimpspec.Connection.generate_element_identifiers"]], "generate_element_identifiers() (pyimpspec.container method)": [[1, "pyimpspec.Container.generate_element_identifiers"]], "get_connections() (pyimpspec.circuit method)": [[1, "pyimpspec.Circuit.get_connections"]], "get_connections() (pyimpspec.connection method)": [[1, "pyimpspec.Connection.get_connections"]], "get_default_lower_limit() (pyimpspec.element class method)": [[1, "pyimpspec.Element.get_default_lower_limit"]], "get_default_lower_limits() (pyimpspec.element class method)": [[1, "pyimpspec.Element.get_default_lower_limits"]], "get_default_subcircuit() (pyimpspec.container class method)": [[1, "pyimpspec.Container.get_default_subcircuit"]], "get_default_subcircuits() (pyimpspec.container class method)": [[1, "pyimpspec.Container.get_default_subcircuits"]], "get_default_upper_limit() (pyimpspec.element class method)": [[1, "pyimpspec.Element.get_default_upper_limit"]], "get_default_upper_limits() (pyimpspec.element class method)": [[1, "pyimpspec.Element.get_default_upper_limits"]], "get_default_value() (pyimpspec.element class method)": [[1, "pyimpspec.Element.get_default_value"]], "get_default_values() (pyimpspec.element class method)": [[1, "pyimpspec.Element.get_default_values"]], "get_description() (pyimpspec.element class method)": [[1, "pyimpspec.Element.get_description"]], "get_element_name() (pyimpspec.circuit method)": [[1, "pyimpspec.Circuit.get_element_name"]], "get_element_name() (pyimpspec.connection method)": [[1, "pyimpspec.Connection.get_element_name"]], "get_elements() (in module pyimpspec)": [[1, "pyimpspec.get_elements"]], "get_elements() (pyimpspec.circuit method)": [[1, "pyimpspec.Circuit.get_elements"]], "get_elements() (pyimpspec.connection method)": [[1, "pyimpspec.Connection.get_elements"]], "get_extended_description() (pyimpspec.element class method)": [[1, "pyimpspec.Element.get_extended_description"]], "get_impedances() (pyimpspec.circuit method)": [[1, "pyimpspec.Circuit.get_impedances"]], "get_impedances() (pyimpspec.connection method)": [[1, "pyimpspec.Connection.get_impedances"]], "get_impedances() (pyimpspec.element method)": [[1, "pyimpspec.Element.get_impedances"]], "get_label() (pyimpspec.element method)": [[1, "pyimpspec.Element.get_label"]], "get_lower_limit() (pyimpspec.element method)": [[1, "pyimpspec.Element.get_lower_limit"]], "get_lower_limits() (pyimpspec.element method)": [[1, "pyimpspec.Element.get_lower_limits"]], "get_name() (pyimpspec.element method)": [[1, "pyimpspec.Element.get_name"]], "get_subcircuit() (pyimpspec.container method)": [[1, "pyimpspec.Container.get_subcircuit"]], "get_subcircuit_description() (pyimpspec.container class method)": [[1, "pyimpspec.Container.get_subcircuit_description"]], "get_subcircuit_descriptions() (pyimpspec.container class method)": [[1, "pyimpspec.Container.get_subcircuit_descriptions"]], "get_subcircuits() (pyimpspec.container method)": [[1, "pyimpspec.Container.get_subcircuits"]], "get_symbol() (pyimpspec.element class method)": [[1, "pyimpspec.Element.get_symbol"]], "get_unit() (pyimpspec.container class method)": [[1, "pyimpspec.Container.get_unit"]], "get_unit() (pyimpspec.element class method)": [[1, "pyimpspec.Element.get_unit"]], "get_units() (pyimpspec.container class method)": [[1, "pyimpspec.Container.get_units"]], "get_units() (pyimpspec.element class method)": [[1, "pyimpspec.Element.get_units"]], "get_upper_limit() (pyimpspec.element method)": [[1, "pyimpspec.Element.get_upper_limit"]], "get_upper_limits() (pyimpspec.element method)": [[1, "pyimpspec.Element.get_upper_limits"]], "get_value() (pyimpspec.element method)": [[1, "pyimpspec.Element.get_value"]], "get_value_description() (pyimpspec.element class method)": [[1, "pyimpspec.Element.get_value_description"]], "get_value_descriptions() (pyimpspec.element class method)": [[1, "pyimpspec.Element.get_value_descriptions"]], "get_values() (pyimpspec.element method)": [[1, "pyimpspec.Element.get_values"]], "index() (pyimpspec.connection method)": [[1, "pyimpspec.Connection.index"]], "insert() (pyimpspec.connection method)": [[1, "pyimpspec.Connection.insert"]], "is_fixed() (pyimpspec.element method)": [[1, "pyimpspec.Element.is_fixed"]], "is_fixed_by_default() (pyimpspec.element class method)": [[1, "pyimpspec.Element.is_fixed_by_default"]], "parallel() (pyimpspec.circuitbuilder method)": [[1, "pyimpspec.CircuitBuilder.parallel"]], "parse_cdc() (in module pyimpspec)": [[1, "pyimpspec.parse_cdc"]], "pop() (pyimpspec.connection method)": [[1, "pyimpspec.Connection.pop"]], "pyimpspec.circuit.elements": [[1, "module-pyimpspec.circuit.elements"]], "register_element() (in module pyimpspec)": [[1, "pyimpspec.register_element"]], "remove() (pyimpspec.connection method)": [[1, "pyimpspec.Connection.remove"]], "reset_parameter() (pyimpspec.element method)": [[1, "pyimpspec.Element.reset_parameter"]], "reset_parameters() (pyimpspec.element method)": [[1, "pyimpspec.Element.reset_parameters"]], "series() (pyimpspec.circuitbuilder method)": [[1, "pyimpspec.CircuitBuilder.series"]], "set_fixed() (pyimpspec.element method)": [[1, "pyimpspec.Element.set_fixed"]], "set_label() (pyimpspec.element method)": [[1, "pyimpspec.Element.set_label"]], "set_lower_limits() (pyimpspec.element method)": [[1, "pyimpspec.Element.set_lower_limits"]], "set_subcircuits() (pyimpspec.container method)": [[1, "pyimpspec.Container.set_subcircuits"]], "set_upper_limits() (pyimpspec.element method)": [[1, "pyimpspec.Element.set_upper_limits"]], "set_values() (pyimpspec.element method)": [[1, "pyimpspec.Element.set_values"]], "simulate_spectrum() (in module pyimpspec)": [[1, "pyimpspec.simulate_spectrum"]], "to_circuit() (pyimpspec.circuitbuilder method)": [[1, "pyimpspec.CircuitBuilder.to_circuit"]], "to_circuitikz() (pyimpspec.circuit method)": [[1, "pyimpspec.Circuit.to_circuitikz"]], "to_circuitikz() (pyimpspec.connection method)": [[1, "pyimpspec.Connection.to_circuitikz"]], "to_drawing() (pyimpspec.circuit method)": [[1, "pyimpspec.Circuit.to_drawing"]], "to_drawing() (pyimpspec.connection method)": [[1, "pyimpspec.Connection.to_drawing"]], "to_latex() (pyimpspec.circuit method)": [[1, "pyimpspec.Circuit.to_latex"]], "to_latex() (pyimpspec.connection method)": [[1, "pyimpspec.Connection.to_latex"]], "to_latex() (pyimpspec.element method)": [[1, "pyimpspec.Element.to_latex"]], "to_string() (pyimpspec.circuit method)": [[1, "pyimpspec.Circuit.to_string"]], "to_string() (pyimpspec.circuitbuilder method)": [[1, "pyimpspec.CircuitBuilder.to_string"]], "to_string() (pyimpspec.connection method)": [[1, "pyimpspec.Connection.to_string"]], "to_string() (pyimpspec.container method)": [[1, "pyimpspec.Container.to_string"]], "to_string() (pyimpspec.element method)": [[1, "pyimpspec.Element.to_string"]], "to_string() (pyimpspec.parallel method)": [[1, "pyimpspec.Parallel.to_string"]], "to_string() (pyimpspec.series method)": [[1, "pyimpspec.Series.to_string"]], "to_sympy() (pyimpspec.circuit method)": [[1, "pyimpspec.Circuit.to_sympy"]], "to_sympy() (pyimpspec.connection method)": [[1, "pyimpspec.Connection.to_sympy"]], "to_sympy() (pyimpspec.container method)": [[1, "pyimpspec.Container.to_sympy"]], "to_sympy() (pyimpspec.element method)": [[1, "pyimpspec.Element.to_sympy"]], "to_sympy() (pyimpspec.parallel method)": [[1, "pyimpspec.Parallel.to_sympy"]], "to_sympy() (pyimpspec.series method)": [[1, "pyimpspec.Series.to_sympy"]], "dataset (class in pyimpspec)": [[2, "pyimpspec.DataSet"]], "average() (pyimpspec.dataset class method)": [[2, "pyimpspec.DataSet.average"]], "dataframe_to_data_sets() (in module pyimpspec)": [[2, "pyimpspec.dataframe_to_data_sets"]], "duplicate() (pyimpspec.dataset class method)": [[2, "pyimpspec.DataSet.duplicate"]], "from_dict() (pyimpspec.dataset class method)": [[2, "pyimpspec.DataSet.from_dict"]], "get_bode_data() (pyimpspec.dataset method)": [[2, "pyimpspec.DataSet.get_bode_data"]], "get_frequencies() (pyimpspec.dataset method)": [[2, "pyimpspec.DataSet.get_frequencies"]], "get_impedances() (pyimpspec.dataset method)": [[2, "pyimpspec.DataSet.get_impedances"]], "get_label() (pyimpspec.dataset method)": [[2, "pyimpspec.DataSet.get_label"]], "get_magnitudes() (pyimpspec.dataset method)": [[2, "pyimpspec.DataSet.get_magnitudes"]], "get_mask() (pyimpspec.dataset method)": [[2, "pyimpspec.DataSet.get_mask"]], "get_num_points() (pyimpspec.dataset method)": [[2, "pyimpspec.DataSet.get_num_points"]], "get_nyquist_data() (pyimpspec.dataset method)": [[2, "pyimpspec.DataSet.get_nyquist_data"]], "get_parsers() (in module pyimpspec)": [[2, "pyimpspec.get_parsers"]], "get_path() (pyimpspec.dataset method)": [[2, "pyimpspec.DataSet.get_path"]], "get_phases() (pyimpspec.dataset method)": [[2, "pyimpspec.DataSet.get_phases"]], "high_pass() (pyimpspec.dataset method)": [[2, "pyimpspec.DataSet.high_pass"]], "low_pass() (pyimpspec.dataset method)": [[2, "pyimpspec.DataSet.low_pass"]], "parse_csv() (in module pyimpspec.data.formats)": [[2, "pyimpspec.data.formats.parse_csv"]], "parse_data() (in module pyimpspec)": [[2, "pyimpspec.parse_data"]], "parse_dfr() (in module pyimpspec.data.formats)": [[2, "pyimpspec.data.formats.parse_dfr"]], "parse_dta() (in module pyimpspec.data.formats)": [[2, "pyimpspec.data.formats.parse_dta"]], "parse_i2b() (in module pyimpspec.data.formats)": [[2, "pyimpspec.data.formats.parse_i2b"]], "parse_ids() (in module pyimpspec.data.formats)": [[2, "pyimpspec.data.formats.parse_ids"]], "parse_mpt() (in module pyimpspec.data.formats)": [[2, "pyimpspec.data.formats.parse_mpt"]], "parse_p00() (in module pyimpspec.data.formats)": [[2, "pyimpspec.data.formats.parse_p00"]], "parse_spreadsheet() (in module pyimpspec.data.formats)": [[2, "pyimpspec.data.formats.parse_spreadsheet"]], "pyimpspec.data.formats": [[2, "module-pyimpspec.data.formats"]], "set_label() (pyimpspec.dataset method)": [[2, "pyimpspec.DataSet.set_label"]], "set_mask() (pyimpspec.dataset method)": [[2, "pyimpspec.DataSet.set_mask"]], "set_path() (pyimpspec.dataset method)": [[2, "pyimpspec.DataSet.set_path"]], "subtract_impedances() (pyimpspec.dataset method)": [[2, "pyimpspec.DataSet.subtract_impedances"]], "to_dataframe() (pyimpspec.dataset method)": [[2, "pyimpspec.DataSet.to_dataframe"]], "to_dict() (pyimpspec.dataset method)": [[2, "pyimpspec.DataSet.to_dict"]], "bhtresult (class in pyimpspec)": [[3, "pyimpspec.BHTResult"]], "drtresult (class in pyimpspec)": [[3, "pyimpspec.DRTResult"]], "mrqfitresult (class in pyimpspec)": [[3, "pyimpspec.MRQFitResult"]], "trnnlsresult (class in pyimpspec)": [[3, "pyimpspec.TRNNLSResult"]], "trrbfresult (class in pyimpspec)": [[3, "pyimpspec.TRRBFResult"]], "calculate_drt() (in module pyimpspec)": [[3, "pyimpspec.calculate_drt"]], "calculate_drt_bht() (in module pyimpspec)": [[3, "pyimpspec.calculate_drt_bht"]], "calculate_drt_mrq_fit() (in module pyimpspec)": [[3, "pyimpspec.calculate_drt_mrq_fit"]], "calculate_drt_tr_nnls() (in module pyimpspec)": [[3, "pyimpspec.calculate_drt_tr_nnls"]], "calculate_drt_tr_rbf() (in module pyimpspec)": [[3, "pyimpspec.calculate_drt_tr_rbf"]], "get_bode_data() (pyimpspec.drtresult method)": [[3, "pyimpspec.DRTResult.get_bode_data"]], "get_drt_credible_intervals_data() (pyimpspec.trrbfresult method)": [[3, "pyimpspec.TRRBFResult.get_drt_credible_intervals_data"]], "get_drt_data() (pyimpspec.bhtresult method)": [[3, "pyimpspec.BHTResult.get_drt_data"]], "get_drt_data() (pyimpspec.mrqfitresult method)": [[3, "pyimpspec.MRQFitResult.get_drt_data"]], "get_drt_data() (pyimpspec.trnnlsresult method)": [[3, "pyimpspec.TRNNLSResult.get_drt_data"]], "get_drt_data() (pyimpspec.trrbfresult method)": [[3, "pyimpspec.TRRBFResult.get_drt_data"]], "get_frequencies() (pyimpspec.drtresult method)": [[3, "pyimpspec.DRTResult.get_frequencies"]], "get_gammas() (pyimpspec.bhtresult method)": [[3, "pyimpspec.BHTResult.get_gammas"]], "get_gammas() (pyimpspec.mrqfitresult method)": [[3, "pyimpspec.MRQFitResult.get_gammas"]], "get_gammas() (pyimpspec.trnnlsresult method)": [[3, "pyimpspec.TRNNLSResult.get_gammas"]], "get_gammas() (pyimpspec.trrbfresult method)": [[3, "pyimpspec.TRRBFResult.get_gammas"]], "get_impedances() (pyimpspec.drtresult method)": [[3, "pyimpspec.DRTResult.get_impedances"]], "get_label() (pyimpspec.bhtresult method)": [[3, "pyimpspec.BHTResult.get_label"]], "get_label() (pyimpspec.drtresult method)": [[3, "pyimpspec.DRTResult.get_label"]], "get_label() (pyimpspec.mrqfitresult method)": [[3, "pyimpspec.MRQFitResult.get_label"]], "get_label() (pyimpspec.trnnlsresult method)": [[3, "pyimpspec.TRNNLSResult.get_label"]], "get_label() (pyimpspec.trrbfresult method)": [[3, "pyimpspec.TRRBFResult.get_label"]], "get_nyquist_data() (pyimpspec.drtresult method)": [[3, "pyimpspec.DRTResult.get_nyquist_data"]], "get_peaks() (pyimpspec.bhtresult method)": [[3, "pyimpspec.BHTResult.get_peaks"]], "get_peaks() (pyimpspec.mrqfitresult method)": [[3, "pyimpspec.MRQFitResult.get_peaks"]], "get_peaks() (pyimpspec.trnnlsresult method)": [[3, "pyimpspec.TRNNLSResult.get_peaks"]], "get_peaks() (pyimpspec.trrbfresult method)": [[3, "pyimpspec.TRRBFResult.get_peaks"]], "get_residuals_data() (pyimpspec.drtresult method)": [[3, "pyimpspec.DRTResult.get_residuals_data"]], "get_scores() (pyimpspec.bhtresult method)": [[3, "pyimpspec.BHTResult.get_scores"]], "get_time_constants() (pyimpspec.drtresult method)": [[3, "pyimpspec.DRTResult.get_time_constants"]], "to_peaks_dataframe() (pyimpspec.bhtresult method)": [[3, "pyimpspec.BHTResult.to_peaks_dataframe"]], "to_peaks_dataframe() (pyimpspec.drtresult method)": [[3, "pyimpspec.DRTResult.to_peaks_dataframe"]], "to_peaks_dataframe() (pyimpspec.mrqfitresult method)": [[3, "pyimpspec.MRQFitResult.to_peaks_dataframe"]], "to_peaks_dataframe() (pyimpspec.trnnlsresult method)": [[3, "pyimpspec.TRNNLSResult.to_peaks_dataframe"]], "to_peaks_dataframe() (pyimpspec.trrbfresult method)": [[3, "pyimpspec.TRRBFResult.to_peaks_dataframe"]], "to_scores_dataframe() (pyimpspec.bhtresult method)": [[3, "pyimpspec.BHTResult.to_scores_dataframe"]], "to_statistics_dataframe() (pyimpspec.bhtresult method)": [[3, "pyimpspec.BHTResult.to_statistics_dataframe"]], "to_statistics_dataframe() (pyimpspec.drtresult method)": [[3, "pyimpspec.DRTResult.to_statistics_dataframe"]], "to_statistics_dataframe() (pyimpspec.mrqfitresult method)": [[3, "pyimpspec.MRQFitResult.to_statistics_dataframe"]], "to_statistics_dataframe() (pyimpspec.trnnlsresult method)": [[3, "pyimpspec.TRNNLSResult.to_statistics_dataframe"]], "to_statistics_dataframe() (pyimpspec.trrbfresult method)": [[3, "pyimpspec.TRRBFResult.to_statistics_dataframe"]], "connectionwithoutelements": [[4, "pyimpspec.exceptions.ConnectionWithoutElements"]], "drterror": [[4, "pyimpspec.exceptions.DRTError"]], "duplicateparameterdefinition": [[4, "pyimpspec.exceptions.DuplicateParameterDefinition"]], "expectednumericvalue": [[4, "pyimpspec.exceptions.ExpectedNumericValue"]], "expectedparameteridentifier": [[4, "pyimpspec.exceptions.ExpectedParameterIdentifier"]], "fittingerror": [[4, "pyimpspec.exceptions.FittingError"]], "impedanceerror": [[4, "pyimpspec.exceptions.ImpedanceError"]], "infiniteimpedance": [[4, "pyimpspec.exceptions.InfiniteImpedance"]], "infinitelimit": [[4, "pyimpspec.exceptions.InfiniteLimit"]], "insufficientelementsinparallelconnection": [[4, "pyimpspec.exceptions.InsufficientElementsInParallelConnection"]], "insufficienttokens": [[4, "pyimpspec.exceptions.InsufficientTokens"]], "invalidelementsymbol": [[4, "pyimpspec.exceptions.InvalidElementSymbol"]], "invalidequation": [[4, "pyimpspec.exceptions.InvalidEquation"]], "invalidnumericvalue": [[4, "pyimpspec.exceptions.InvalidNumericValue"]], "invalidparameterdefinition": [[4, "pyimpspec.exceptions.InvalidParameterDefinition"]], "invalidparameterkey": [[4, "pyimpspec.exceptions.InvalidParameterKey"]], "invalidparameterlowerlimit": [[4, "pyimpspec.exceptions.InvalidParameterLowerLimit"]], "invalidparameterupperlimit": [[4, "pyimpspec.exceptions.InvalidParameterUpperLimit"]], "kramerskronigerror": [[4, "pyimpspec.exceptions.KramersKronigError"]], "notanumberimpedance": [[4, "pyimpspec.exceptions.NotANumberImpedance"]], "parsingerror": [[4, "pyimpspec.exceptions.ParsingError"]], "tokenizingerror": [[4, "pyimpspec.exceptions.TokenizingError"]], "toomanyparameterdefinitions": [[4, "pyimpspec.exceptions.TooManyParameterDefinitions"]], "unexpectedcharacter": [[4, "pyimpspec.exceptions.UnexpectedCharacter"]], "unexpectedidentifier": [[4, "pyimpspec.exceptions.UnexpectedIdentifier"]], "unexpectedtoken": [[4, "pyimpspec.exceptions.UnexpectedToken"]], "unsupportedfileformat": [[4, "pyimpspec.exceptions.UnsupportedFileFormat"]], "zhiterror": [[4, "pyimpspec.exceptions.ZHITError"]], "pyimpspec.exceptions": [[4, "module-pyimpspec.exceptions"]], "fitresult (class in pyimpspec)": [[5, "pyimpspec.FitResult"]], "fittedparameter (class in pyimpspec)": [[5, "pyimpspec.FittedParameter"]], "fit_circuit() (in module pyimpspec)": [[5, "pyimpspec.fit_circuit"]], "get_bode_data() (pyimpspec.fitresult method)": [[5, "pyimpspec.FitResult.get_bode_data"]], "get_error() (pyimpspec.fittedparameter method)": [[5, "pyimpspec.FittedParameter.get_error"]], "get_frequencies() (pyimpspec.fitresult method)": [[5, "pyimpspec.FitResult.get_frequencies"]], "get_impedances() (pyimpspec.fitresult method)": [[5, "pyimpspec.FitResult.get_impedances"]], "get_label() (pyimpspec.fitresult method)": [[5, "pyimpspec.FitResult.get_label"]], "get_nyquist_data() (pyimpspec.fitresult method)": [[5, "pyimpspec.FitResult.get_nyquist_data"]], "get_parameters() (pyimpspec.fitresult method)": [[5, "pyimpspec.FitResult.get_parameters"]], "get_relative_error() (pyimpspec.fittedparameter method)": [[5, "pyimpspec.FittedParameter.get_relative_error"]], "get_residuals_data() (pyimpspec.fitresult method)": [[5, "pyimpspec.FitResult.get_residuals_data"]], "get_unit() (pyimpspec.fittedparameter method)": [[5, "pyimpspec.FittedParameter.get_unit"]], "get_value() (pyimpspec.fittedparameter method)": [[5, "pyimpspec.FittedParameter.get_value"]], "is_fixed() (pyimpspec.fittedparameter method)": [[5, "pyimpspec.FittedParameter.is_fixed"]], "to_parameters_dataframe() (pyimpspec.fitresult method)": [[5, "pyimpspec.FitResult.to_parameters_dataframe"]], "to_statistics_dataframe() (pyimpspec.fitresult method)": [[5, "pyimpspec.FitResult.to_statistics_dataframe"]], "testresult (class in pyimpspec)": [[6, "pyimpspec.TestResult"]], "calculate_score() (pyimpspec.testresult method)": [[6, "pyimpspec.TestResult.calculate_score"]], "get_bode_data() (pyimpspec.testresult method)": [[6, "pyimpspec.TestResult.get_bode_data"]], "get_frequencies() (pyimpspec.testresult method)": [[6, "pyimpspec.TestResult.get_frequencies"]], "get_impedances() (pyimpspec.testresult method)": [[6, "pyimpspec.TestResult.get_impedances"]], "get_label() (pyimpspec.testresult method)": [[6, "pyimpspec.TestResult.get_label"]], "get_nyquist_data() (pyimpspec.testresult method)": [[6, "pyimpspec.TestResult.get_nyquist_data"]], "get_residuals_data() (pyimpspec.testresult method)": [[6, "pyimpspec.TestResult.get_residuals_data"]], "get_series_capacitance() (pyimpspec.testresult method)": [[6, "pyimpspec.TestResult.get_series_capacitance"]], "get_series_inductance() (pyimpspec.testresult method)": [[6, "pyimpspec.TestResult.get_series_inductance"]], "get_series_resistance() (pyimpspec.testresult method)": [[6, "pyimpspec.TestResult.get_series_resistance"]], "perform_exploratory_tests() (in module pyimpspec)": [[6, "pyimpspec.perform_exploratory_tests"]], "perform_test() (in module pyimpspec)": [[6, "pyimpspec.perform_test"]], "to_statistics_dataframe() (pyimpspec.testresult method)": [[6, "pyimpspec.TestResult.to_statistics_dataframe"]], "plot_bht_scores() (in module pyimpspec.mpl)": [[7, "pyimpspec.mpl.plot_bht_scores"]], "plot_bode() (in module pyimpspec.mpl)": [[7, "pyimpspec.mpl.plot_bode"]], "plot_circuit() (in module pyimpspec.mpl)": [[7, "pyimpspec.mpl.plot_circuit"]], "plot_complex() (in module pyimpspec.mpl)": [[7, "pyimpspec.mpl.plot_complex"]], "plot_data() (in module pyimpspec.mpl)": [[7, "pyimpspec.mpl.plot_data"]], "plot_drt() (in module pyimpspec.mpl)": [[7, "pyimpspec.mpl.plot_drt"]], "plot_fit() (in module pyimpspec.mpl)": [[7, "pyimpspec.mpl.plot_fit"]], "plot_gamma() (in module pyimpspec.mpl)": [[7, "pyimpspec.mpl.plot_gamma"]], "plot_imaginary() (in module pyimpspec.mpl)": [[7, "pyimpspec.mpl.plot_imaginary"]], "plot_magnitude() (in module pyimpspec.mpl)": [[7, "pyimpspec.mpl.plot_magnitude"]], "plot_mu_xps() (in module pyimpspec.mpl)": [[7, "pyimpspec.mpl.plot_mu_xps"]], "plot_nyquist() (in module pyimpspec.mpl)": [[7, "pyimpspec.mpl.plot_nyquist"]], "plot_phase() (in module pyimpspec.mpl)": [[7, "pyimpspec.mpl.plot_phase"]], "plot_real() (in module pyimpspec.mpl)": [[7, "pyimpspec.mpl.plot_real"]], "plot_residuals() (in module pyimpspec.mpl)": [[7, "pyimpspec.mpl.plot_residuals"]], "plot_tests() (in module pyimpspec.mpl)": [[7, "pyimpspec.mpl.plot_tests"]], "pyimpspec.mpl": [[7, "module-0"], [7, "module-pyimpspec.mpl"]], "compleximpedance (in module pyimpspec)": [[8, "pyimpspec.ComplexImpedance"]], "compleximpedances (in module pyimpspec)": [[8, "pyimpspec.ComplexImpedances"]], "complexresidual (in module pyimpspec)": [[8, "pyimpspec.ComplexResidual"]], "complexresiduals (in module pyimpspec)": [[8, "pyimpspec.ComplexResiduals"]], "frequencies (in module pyimpspec)": [[8, "pyimpspec.Frequencies"]], "frequency (in module pyimpspec)": [[8, "pyimpspec.Frequency"]], "gamma (in module pyimpspec)": [[8, "pyimpspec.Gamma"]], "gammas (in module pyimpspec)": [[8, "pyimpspec.Gammas"]], "impedance (in module pyimpspec)": [[8, "pyimpspec.Impedance"]], "impedances (in module pyimpspec)": [[8, "pyimpspec.Impedances"]], "indices (in module pyimpspec)": [[8, "pyimpspec.Indices"]], "phase (in module pyimpspec)": [[8, "pyimpspec.Phase"]], "phases (in module pyimpspec)": [[8, "pyimpspec.Phases"]], "residual (in module pyimpspec)": [[8, "pyimpspec.Residual"]], "residuals (in module pyimpspec)": [[8, "pyimpspec.Residuals"]], "timeconstant (in module pyimpspec)": [[8, "pyimpspec.TimeConstant"]], "timeconstants (in module pyimpspec)": [[8, "pyimpspec.TimeConstants"]], "zhitresult (class in pyimpspec)": [[9, "pyimpspec.ZHITResult"]], "get_bode_data() (pyimpspec.zhitresult method)": [[9, "pyimpspec.ZHITResult.get_bode_data"]], "get_frequencies() (pyimpspec.zhitresult method)": [[9, "pyimpspec.ZHITResult.get_frequencies"]], "get_impedances() (pyimpspec.zhitresult method)": [[9, "pyimpspec.ZHITResult.get_impedances"]], "get_label() (pyimpspec.zhitresult method)": [[9, "pyimpspec.ZHITResult.get_label"]], "get_nyquist_data() (pyimpspec.zhitresult method)": [[9, "pyimpspec.ZHITResult.get_nyquist_data"]], "get_residuals_data() (pyimpspec.zhitresult method)": [[9, "pyimpspec.ZHITResult.get_residuals_data"]], "perform_zhit() (in module pyimpspec)": [[9, "pyimpspec.perform_zhit"]], "to_statistics_dataframe() (pyimpspec.zhitresult method)": [[9, "pyimpspec.ZHITResult.to_statistics_dataframe"]]}})